<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android 5.1.1 源码编译]]></title>
      <url>https://mummyding.github.io/2016/09/06/Android-5-1-1-%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</url>
      <content type="html"><![CDATA[<p>一年前刚学Android没多久的时候就开始尝试编译Android源码，前后换过好几个版本均以失败告终。失败的原因主要有以下几个:</p>
<ul>
<li>网络不稳定:导致源码下载不全</li>
<li>编译环境不对:依赖软件没装全，软件版本不对<br>源码动辄一二十G，下载编译时间成本都非常高，差一点没处理好可能就得从头再来，所以编译源码最好能有较长的完整时间.   <a id="more"></a>
</li>
</ul>
<p></p><h3> 环境配置   <p></p>
<ol>
<li>安装 Ubuntu 14.04 LTS  </li>
<li><p>配置source list，我用的是清华的源  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">$ sudo gedit /etc/apt/sources.list</div><div class="line">替换成</div><div class="line">deb http://archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse</div><div class="line">deb http://archive.ubuntu.com/ubuntu/ trusty-security main restricted universe multiverse</div><div class="line">deb http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse</div><div class="line">deb http://archive.ubuntu.com/ubuntu/ trusty-proposed main restricted universe multiverse</div><div class="line">deb http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse</div><div class="line">deb-src http://archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse</div><div class="line">deb-src http://archive.ubuntu.com/ubuntu/ trusty-security main restricted universe multiverse</div><div class="line">deb-src http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse</div><div class="line">deb-src http://archive.ubuntu.com/ubuntu/ trusty-proposed main restricted universe multiverse</div><div class="line">deb-src http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse</div><div class="line">deb http://archive.canonical.com/ubuntu/ trusty partner</div><div class="line"></div><div class="line">deb http://extras.ubuntu.com/ubuntu/ trusty main</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise main restricted universe multiverse</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-security main restricted universe multiverse</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-updates main restricted universe multiverse</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-backports main restricted universe multiverse</div><div class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-proposed main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-security main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-updates main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-backports main restricted universe multiverse</div><div class="line">deb-src http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ precise-proposed main restricted universe multiverse</div></pre></td></tr></table></figure>
</li>
<li><p>安装 &amp; 配置 OpenJDK 7</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get update   </div><div class="line">$ sudo apt-get install openjdk-7-jdk   </div><div class="line">$ sudo gedit /etc/profile  </div><div class="line">文件末尾加上:   </div><div class="line">JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64/     </div><div class="line">PATH=$PATH:$HOME/bin:$JAVA_HOME/bin     </div><div class="line">export JAVA_HOME     </div><div class="line">export PATH</div></pre></td></tr></table></figure>
</li>
<li><p>安装 &amp; 配置 git <br></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo apt install git</div><div class="line">$ git config --global user.name &quot;你的git用户名&quot;</div><div class="line">$ git config --global user.email &quot;你的git邮箱&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>安装必要的packages</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install g++-multilib</div><div class="line">$ sudo apt-get install  bison git gperf libxml2-utils make python-networkx zlib1g-dev:i386 zip</div><div class="line">$ sudo apt-get install gcc</div></pre></td></tr></table></figure>
</li>
<li><p>安装repo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> 如果你是自由网络:</div><div class="line"> $ mkdir ~/bin</div><div class="line"> $ sudo apt-get install curl</div><div class="line"> $ curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</div><div class="line">$ chmod a+x ~/bin/repo</div><div class="line"> 否则安装phablet-tools,它包含 repo:</div><div class="line"> $ sudo apt-get install phablet-tools</div></pre></td></tr></table></figure>
</li>
<li><p>修改REPO_URL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">源码我不是直接连官网下的，而是使用了中科大的源，速度很快</div><div class="line">这里我们需要对repo的REPO_URL进行修改</div><div class="line">如果你是使用上面第一种方法安装的repo，那repo的路径是~/bin/repo</div><div class="line">$ sudo gedit ~/bin/repo</div><div class="line">否则路径为/usr/bin/repo</div><div class="line">$ sudo gedit /usr/bin/repo</div><div class="line">修改repo文件，设置REPO_URL如下：</div><div class="line">REPO_URL = &apos;https://gerrit-googlesource.lug.ustc.edu.cn/git-repo&apos;</div></pre></td></tr></table></figure>
</li>
</ol>
<p></p><h3> 下载源码<p></p>
<ol>
<li><p>初始化<br>选一个足够大的分区(最好不小于50G)建一个目录专门存放下载的源码,在该目录下输入一下命令初始化:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ repo init -u https://gerrit-googlesource.lug.ustc.edu.cn/git-repo&apos; -b android-5.1.1_r8</div></pre></td></tr></table></figure>
</li>
<li><p>开始下载   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sync repo</div></pre></td></tr></table></figure>
</li>
</ol>
<p>漫长的等待, 我下载的时候速度在 500KB/s ~ 1.6MB/s 不等，用了大概五个小时</p>
<p></p><h3> 编译源码 <p></p>
<ol>
<li><p>初始化编译环境<br>如果你的系统是存放源码的分区是ntfs格式的就需要特别注意了，Linux是不允许ntfs文件系统下文件拥有执行权限的。之前就被这个坑过，以为无解，就把源码转移到非ntfs的分区. 还好这次我找到了解决方法,安装一个软件即可:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install ntfs-3g</div><div class="line">$ sudo apt-get install ntfs-config</div><div class="line">打开 ntfs-config:</div><div class="line">$ sudo ntfs-config</div><div class="line">赋予相应分区权限</div></pre></td></tr></table></figure>
<p>确保有执行权限后，执行envsetup.sh初始化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ . build/envsetup.sh</div></pre></td></tr></table></figure>
<p>选择编译目标</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ lunch</div><div class="line">执行此命令后会列出所有可供编译的目标，我是打算仍模拟器上跑的，选1就好</div></pre></td></tr></table></figure>
</li>
<li><p>开始编译   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ make j4</div><div class="line">这里的4表示并发数，可以自己改</div></pre></td></tr></table></figure>
</li>
</ol>
<p>编译时间就取决于你的硬件了 少则一两个小时，长则八九个小时都有可能，我的跑了五个多小时,成功提示:<br><img src="https://mummyding.github.io/img/2016-09-06_1.png" alt="img"></p>
<ol>
<li>运行<br>如果上面一切顺利就可以在模拟器上跑编译出来的镜像了,在源码目录执行以下命令:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ emulator &amp;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>效果如下:  </p>
<p><img src="https://mummyding.github.io/img/2016-09-06_2.png" alt="img"></p>
</h3></h3></h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[网易实习第一阶段简单回顾]]></title>
      <url>https://mummyding.github.io/2016/08/20/%E7%BD%91%E6%98%93%E5%AE%9E%E4%B9%A0%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/</url>
      <content type="html"><![CDATA[<p>前几天顺哥面试的时候碰到HR明确说我转正答辩通过，趁此机会对这段时间的工作做个梳理。面试经历之前在已经在 <strong><a href="http://blog.csdn.net/mummyding/article/details/51037084" target="_blank" rel="external"></a><a href="http://blog.csdn.net/mummyding/article/details/51037084" target="_blank" rel="external">Android实习生面试记录－蘑菇街、网易等</a> </strong>写了，结果就是网易发了offer，蘑菇街拿到终面机会但是我没去面:5月4号入职网易，同时蘑菇街通知5月5号现场终面(第五面…)。那天上午办完入职手续后顺哥来接，正在电梯间接到蘑菇街HR电话确认是否能够去终面，根本不确定是否可以请假&amp;感觉刚入职又去面试不大好就拒了。过了几个礼拜蘑菇街HR又给我打电话说北京有面试问我去不去，虽然感动但还是拒了。<br><a id="more"></a></p>
<p><strong>开始阶段</strong><br>   入职第一天,领机器配环境，自由网络一切都很爽。完事后老大扔了一本Clean Code 给我看了两天<br> </p>
<ul>
<li><a href="http://blog.csdn.net/mummyding/article/details/51326238" target="_blank" rel="external">［读书笔记］Clean  Code(1-8章)</a></li>
<li><a href="http://blog.csdn.net/mummyding/article/details/51365846" target="_blank" rel="external">［读书笔记］Clean Code（8-完结）</a><br>之后就是熟悉工程源码看看git提交规范什么的，一周时间在周会的时候做了个汇报。项目还是蛮大的，当时住公司晚上待到九十点走也仅仅是看了个皮毛，深入细节的话一个礼拜还是不够的。汇报的时候也列出了我看源码的步骤还画了个大大的类图(第一次尝试<br><img src="" alt="">       <img src="http://img.blog.csdn.net/20160820115921004?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><img src="" alt=""></li>
</ul>
<p><strong>开发阶段</strong><br><strong>1. 企业云课堂</strong><br>    了解了怎么提代码，怎么写代码以及熟悉了项目源码后，正好又要开始新的需求。顺哥分了点任务给我，叫我先做设计。这点是与我之前写代码是很不一样的，一种“野路子”碰上正规军的感觉。以前自己做项目，基本就是把功能确定在纸上大概画画UI，然后脑子稍微想想怎么实现哪些地方可以复用大概的架子是怎样的就开始写代码了。有时候遇到问题就边做变查，甚至半路发现之前没有考虑到的点但却发现一时半会解决不了可能就可耻地改需求了。反正是自己做的东西，既是运动员又是裁判员~_~<br>  对于一些书上讲的UML不屑一顾，嫌麻烦。但现在不一样，我面对的是一个商业产品:需求是确定的，不能说改就改;你需要对你的每一行代码负责,保证产品完成的质量。就这样开始了第一次开发的设计。<br>    其实还好，这次做的是网易云课堂企业版的第一个版本。企业版是针对企业的相对于线上的网易云课堂业务复杂度更小，好多东西都是可以复用的。因此也将相关的代码深入看了下，主要对比不同的地方，另外看当前的代码有哪些可以借鉴以及改进的点。照着这个思路做了自己的设计，在此期间@HY 同学也是提供了很大的帮助。设计的同时还要和后端沟通定接口。弄完后给顺哥看毫无悬念地——被打回来了。主要是UML详略不得当，一些关键的点没有体现出来。改过之后基本符合要求过了设计评审，然后还是在@HY的帮助下进行了项目排期。时间还算充裕，给了八天的时间，两天buffer。最后在规定时间内页完成了功能的开发，效果如下:<br><img src="" alt=""><img src="" alt=""><img src="http://img.blog.csdn.net/20160820120017137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>接下来是提测，但是我要滚回去准备期末考试，也就是说人跑了，bug留下来了。<br>回公司的时候也快要上线，我负责的那部分有两个bug，这两个bug倒不是代码逻辑不对，而是需求。</p>
<ol>
<li>在无数据的情况下，显示的图标不对。这个是因为没有和策划确认明确需求，自己想当然了</li>
<li>遗漏了一个补充需求，这个锅我背一半 因为稿子上是没有明确在对应的页面标注的，而是写在最后面的补充说明里边。当然，这个以后也是特别要注意的<br><strong>2. 代码静态检查</strong><br> 做完第一波需求后正好部门对代码质量提出了更高的要求，我们的提交的代码，每三个小时就会被程序自动检查一次，对于不合格的代码都会按照不同的严重级别进行标出。我的任务便是消灭严重级别较高的代码。所谓不合格代码基本是Clean Code，重构等书上讲的，细致到变量的命名不符合要求，if嵌套超过三层都会标出。工程量较大，着实 花了不少时间。不过这次也算对Clean Code的一个回顾吧。<br><strong>3. 企业版换肤</strong><br> 做企业版1.0的时候视觉给的稿子将主色调从绿色改成了蓝色，由于我们两份代码是要共用，直接简单粗暴的改是不可取的。开始想了两个方案:</li>
<li>采用Google的主题切换 它要求我们不能使用硬编码，改动会比较大 另外如果我们后续想把它做成动态更换是受限    的:切换主题的时候由于需要重启当前Activity，会产生闪屏，这是不能容忍的。</li>
<li>遍历所有的View，对View的颜色进行动态改变。 这种方案不会造成闪屏，但是工作量大，侵入性太强。<br>以上两种方案均被否决，第三种方案被提出: 插件化换肤<br>PS:    左边是几个相关的概念: 插件化、组件化、动态加载<br>右边是Android插件化的应用<br><img src="" alt=""> <img src="http://img.blog.csdn.net/20160820120101732?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><img src="" alt=""></li>
</ol>
<p>我们把图片/颜色 资源打包成一个插件Apk，然后用定义好的语法规则建立View和资源的对应关系生成一个配置文件。换肤的时候我们只需从插件中获取资源，然后将App中的View根据配置文件进行主题切换。这种方案有两个明显的优点:</p>
<ol>
<li>侵入性小，基本不需要对原有的代码进行太多更改，一次部署完成之后，以后想换其他主题只需再打包个插件并对     配置文件进行简单修改即可</li>
<li>拓展性强，支持动态换肤，如果以后想直接从服务器下发资源进行换肤只需再整合下载模块即可<br>方案敲定后，顺哥给了详细的设计，大概就像下面这样(仅是我修改并简化的粗略类图)<br><img src="" alt=""><img src="http://img.blog.csdn.net/20160820120137427?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></li>
</ol>
<p>后续的编码及部署也是花了不少功夫，完工效果如下<br><img src="" alt=""><img src="http://img.blog.csdn.net/20160820120216843?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p><strong>总结 </strong><br>这三个多月的实习，自己在工作方式思考方式变化较大：</p>
<ol>
<li>一切以事实说话，你需要拿出明确的理由说服他人</li>
<li>没有模棱两可，没有想当然，确认后再动手</li>
<li>设计要落实到纸上，而不是”应该是什么”</li>
<li>对设计模式有了不一样的见解,浅浅地开始不是为了”模式”而”模式”<br>下面是自己对技术和产品的展望:</li>
<li>技术<br><img src="" alt=""><img src="http://img.blog.csdn.net/20160820120250552?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></li>
</ol>
<p><img src="" alt=""></p>
<ol>
<li>产品<br><img src="" alt=""><img src="http://img.blog.csdn.net/20160820120321814?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></li>
</ol>
<p><del>~</del><del>~</del><del>~</del><del>~~ 这仅仅是个开始，第一阶段 ~</del><del>~</del><del>~</del><del>~</del>~~~<br><strong>出处:</strong> <a href="http://blog.csdn.net/mummyding/article/details/52260513" target="_blank" rel="external">http://blog.csdn.net/mummyding/article/details/52260513</a><br>GitHub地址: <a href="https://github.com/MummyDing/Leisure/" target="_blank" rel="external">https://github.com/MummyDing/Leisure/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Clean Code （8-完结）]]></title>
      <url>https://mummyding.github.io/2016/05/10/%EF%BC%BB%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%BDClean%20Code%20%EF%BC%888-%E5%AE%8C%E7%BB%93%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>忘了发出来，现在补上</p>
<p>时间： 2016/5/6  星期五</p>
<p>今天阅读了本书的后半部分，有两点不同：</p>
<ol>
<li>层次，前半部分是琐碎的细节，后半部分则基于前半部分但却站在更高的角度来讲怎样写代码。</li>
<li>后半部分还对前半部分进行了归纳总结，以实例的方式一点点地告诉你之前讲的那些规则是如何使用的。<a id="more"></a><br>九、单元测试       <ol>
<li>TDD定律<br>在编写不能通过的单元测试前，不可编写生产代码<br>只可编写刚好无法通过的单元测试，不能编译也算不通过<br>只可编写刚好足以通过当前失败测试的生产代码<br>—– 这三条写的有点绕，我的理解就是：要把测试代码当生产代码来写，测试也很重要<br>2.五大规则(F.I.R.S.T)<br>快速：就是代码质量要好，高效<br>独立：不同测试之间应相互独立<br>可重复：就是在各种环境中都可测试通过<br>自足验证：测试不依赖手工操作来知晓是否通过<br>及时：测试应在生产代码之前进行编写<br>十、类<br>主要注意一个点，类应短小，可通过以下两种方式达到此目的：</li>
</ol>
</li>
<li>权责单一：一个类的权责不应太多，太多则需考虑拆成多个类了</li>
<li>高内聚：类的实体变量应尽可能少，类中方法尽可能多地使用到这些变量<br>十一、系统<pre><code>1.系统构造与使用分开
</code></pre> 工厂：使用工厂方法自行决定何时创建实例，但是构造细节却在其他地方<br> 依赖注入：当A对B有依赖时，A中不负责B的实例化（这就是类的权责单一原则）<pre><code>2.本章的后半部分提到的AOP，AspectJ等内容都以Spring，EJB等框架为例，稀里糊涂    的，还不清楚作者要表达什么，暂时没有体会。
</code></pre>十二、跌进<pre><code> 跌进这一章提到的点不多
1.运行所有的测试：为能方便测试，我们的生产代码也要足够短小，耦合度低
2.重构：在写代码过程中要及时重构，保持代码的优雅
3.不可重复：已有的代码要利用起来，消除重复
4.表达力强：这应该是一个目标或是结果，做好前边的工作自然而然可以达到
</code></pre>十三、并发编程<br>   1.为什么：它可以将“目的”和“时机”分离，进行解耦<br>   2.并发防御原则<br> 单一权责：主要关注一点，并发相关的代码应分离出来<pre><code> 为此，三点建议：
  1).限制数据作用域
  2).使用数据副本：这不就是ThreadLocsal么～～
  3).线程应尽可能地独立
3.学习已有类库：Java中的并发包之类
</code></pre>okay,基本东西就是这些了，后边的章节就是一些实例代码。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Clean Code （1-8章）]]></title>
      <url>https://mummyding.github.io/2016/05/05/%EF%BC%BB%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%BDClean%20Code%20%EF%BC%881-8%E7%AB%A0%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>时间： 2016/5/5 星期四</p>
<p>  自写代码以来，逐渐意识代码代码规范的重要性，不过代码该怎么写更多的是自己的一些体会以及在阅读其他人的代码时的感受。后来开始接触项目开发之后，仅仅是代码块的规范还是不够，于是看了一些设计模式的书籍，了解并尝试使用MVC、MVP等架构。这次看Clean  Code这本书还是第一次系统地学习“如何写代码”，作者很详尽地将一些“写代码”规范进行系统整理。<br><a id="more"></a><br>下面我整理的是各章（1-8）一些主要的点</p>
<p>一、整洁代码</p>
<ol>
<li>概念 <pre><code>代码正确   
简洁明了
清晰易读  
短小精确
</code></pre>二、命名<br>1.准确：<pre><code>名字与意义匹配     
易于区别      
</code></pre>2.实用 <pre><code>使用读的出来的名称   
使用可搜索的名称  
</code></pre>3.明确    <pre><code>一个概念对应一个词  
不用双关语   
使用有意义的语境   
</code></pre>三、函数<pre><code>1.短小
2.职责单一
3.一块代码中，函数的抽象层级需一致
4.函数命名规范（参照二）
5.参数尽可能少
6.如果函数需要的参数要求数量有多种，应考虑将其封装成类
7.实用异常类代替返回错误码，抽离try/catch代码块，使代码更加简洁
</code></pre>四、注释<pre><code> 1.少用注释，尽可能通过规范的代码来表达
 2.不使用无意义的注释
 3.必要的注释
    法律信息
   提供信息的注释
   对代码意图进行解释的注释
   警示信息，防止踩坑
   TODO注释：未来得及完成的部分
4. 对于无用的代码应直接删除而不是注释
</code></pre>五、格式<pre><code>1.为什么需要规范格式
     易维护
     易拓展
2.垂直格式
     行数少，短小精悍
     概念隔离，不同的的概念/逻辑 代码实用空行隔离
     相关靠近：对于关系紧密的代码，尽量写在一起
3.水平格式
     缩进、对齐
</code></pre>六、对象与数据结构<pre><code>1.区别：
     过程式代码便于在不改动既有数据结构的前提下添加新函数
     面向对象代码便于在不改动既有函数的前提下添加新类
 亦即：
         过程式代码难以添加新数据结构，因为必须修改所有函数
         面向对象代码难以添加新函数，因为必须修改所有类
</code></pre>七、错误处理<pre><code>1.使用异常而非返回码：
     更加美观、整洁
2.使用不可控异常
     可控异常的代价是违反开放／闭合原则，因为你需要在使用的地方捕获异常
3.在异常发生的地方添加环境说明：
     这样当异常发生的时候就可以根据这些信息定位异常原因
4.不返回null 也不传递null
     这样在接收的时候不需要进行空值检查
</code></pre>八、边界<pre><code>翻了下原书，边界是Boundaries   对于这个名字，开始不是大理解，就算现在看来也还是觉得不直观
</code></pre>   标题略晦涩：作者的意思应该是让我们让自己的代码和第三方库代码不要耦合太紧密，需有清新的边界<pre><code>对于第三方类库给的学习建议是：探索性地学习测试，以此熟悉类库，写出良好的代码
</code></pre></li>
</ol>
<p>第九章时讲单元测试，这个之前在实际开发中还没使用过，只是在一些书上看到过，明天尝试下再继续看</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android实习生面试记录－蘑菇街、网易等]]></title>
      <url>https://mummyding.github.io/2016/04/01/%20Android%E5%AE%9E%E4%B9%A0%E7%94%9F%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95%EF%BC%8D%E8%98%91%E8%8F%87%E8%A1%97%E3%80%81%E7%BD%91%E6%98%93%E7%AD%89/</url>
      <content type="html"><![CDATA[<p>本来准备面一次记录一次，但是发现还没面完根本没心思整理这些，刚刚结束了蘑菇街HR面，正好闲下来做个总结。实习生招聘的准备，可以说我在打算转工程开发的时候就开始了，开始学习Android的时候就在想简历上应该写一些什么。去年五月份开始学习Android，我在那个时候就计算着距离实习生招聘的时间不到一年，要从一个完全没有接触过Android的小白达到符合各大公司实习生招聘的要求时间紧任务重。自那起，翘过课，熬过夜。花了两个多月时间把基本的东西过一遍，写了一些Demo，然后着手从零开始写一个完整的App。学习基础东西的同时也适当进行深入挖掘，尝试阅读源代码。在上学期期末的时候手上就一个拿的出手的项目，一页简历都填不满＞＿＜计划寒假和KevinWu合作开发一个项目并复习基础知识。一个寒假过去，项目是完成的差不多，但是说好的复习基础知识却还是没有开始。<br><a id="more"></a><br>　　临近开学，写了个简历，最先投了一份到”网易有道”(至今没有消息)。后联系一学长(后面用P指代)到时帮忙内推阿里，P学长在这段时间给予了极大的帮助。建议我先投一波小公司，但是绝大部分都没有任何消息，有通知面试的基本要求现场面而不是电话。开学后收到南昌一家公司的面试通知，于是跑过去面。公司规模很小，Android这块是接外包做的，只有一个开发。到了后先到一个会议室给我我一份卷子做，昨晚后交给该公司唯一的Android开发(下面简称A)看。之后A过来问了几个问题，但是都很简单却又不算传统意义上的”基础知识”，另外他没有听过Material<br> Design让我感到惊讶。我说自己熟悉xxx，看过xxx源码,他说你熟悉的我问干嘛…..然后就是说你写的这些东西没有用，开发中根本用不到　再就是问我数据库之类的用的什么库，我说都是自己封装的原生Api　后来我问他做了多久Android,答一年+，不过之前培训了两年。另外就是问我为什么不去外面大企业找、期望的实习公资和正式工资等。工资这块我都说的相对(南昌)较高，就这样结束第一次面试，回去后也就不了了之。<br>　　接下来内推了阿里＆腾讯，有点打击人，阿里第二天简历直接被刷，腾讯没有任何消息！这段各种反思，想想自己简历是不是不行－－－直到一天中午午睡的时候蘑菇街面试官给我打电话，第一次电话面也没有什么经验，在语言组织答题上都不好。一共四十分钟+，前边的过程都较为被动。面试官是照着简历问的，问题涉及到Java、Android、算法(其实就一个排序)和项目。当时的状况就是不清楚的点直接懵逼也不知道说相关的东西，熟悉的点表达又不够清晰。好在面试官人很好，各种表示理解，最后还谈了平时逛的社区，学习方法之类的东西。最后评价是”看得出来是一个喜欢技术的”，也不知道是安慰我还是真实看法-=-<br> 面完后心里没底。晚上，P学长专门打电话给我分析了这次面试，教我怎么面试，怎么回答问题，面试官看中的点　等，聊天近两个小时，收货颇丰。之后接到杭州一家公司(下文用H指代)HR电话，通知面试，了解了我不在杭州后就直接给我安排了下午电话面试。因为简历是海投的，于是去他们网站看了下H公司到底是做什么的，公司规模不大但是看起来比之前南昌那家靠谱。面试官一开始就叫我说下学习经历，这个问题很喜欢～我主要围绕为什么学，怎么学，学了什么来说，这跟我蘑菇街一面面试官叫我自我介绍我说几句就没话说了好太多。之后面试官主要是围绕我简历问的，我的回答模式基本是:是什么，怎么用，项目中那里用到，为什么用，有没有什么坏处&amp;之后有什么改进/替代＆使用中需要注意的点。说完这些之后还会跟面试官说我还熟悉哪些东西，我处于相对较为主动的状态，有时候面试官正准备深入问的时候我就已经将他准备问的说了。一共面了四十分钟左右，面试官较为满意，说晚上给我一个测试(就是实现一个UI)，后来花点时间写完发过去了。这次面试算是一个转折点，从之前的被动转为主动，面试官H问的问题并不比蘑菇街一面面试官问的浅，但是自己的表达方式和策略不同导致了不同的效果。<br>　　H公司面完后就收到蘑菇街HR电话预约二面，蘑菇街这方面做的不错，面试完后一两天之后就会给反馈预约下一轮面试，面试的时间是周二或周四，这个看个人时间。二面前有好几天的准备时间，我整理了我熟悉的东西:想好面试的时候怎样表述，关键突出哪些点，如果面试官没有问到自己可以从哪些点引入。就这样等到二面，面试官没有按时联系(后面几次面试都如此)，为此我还打电话给HR确认下了时间。不过这次面试和之前的风格不一样，面试官加起来只问了十几分钟的样子，后面都是我问他。这位面试官比较关注基础，甚至问了Java有哪些基本数据类型。他还说只问我熟悉的东西，这样给了我很大的发挥空间。后面他还问了我怎么代码实习质因数分解，当时懵逼了，没反应过来，在他提示用小学生思维后我给了一个可行解。这次总共是聊了25分钟，第二天就收到HR电话预约三面(交叉面)，要求视频。心想视频面很可能被抓写代码，三面时间就拖后了一点。<br>　　二面后收到了网易笔试通过的消息(网易内推也得笔试…),不过网易要求现场面，更坑爹的是和蘑菇街三面时间冲突！！！联系网易的客服，说必须在那一天面，两轮技术＋HR面，可以迟到。当时想着蘑菇街已经过了两面，网易要去杭州&amp;心里也没有底，可能两场面试都被影响发挥不好，打算放弃网易的。但是在P学长还是建议我珍惜这个机会(这里应有感谢)，我就计划着上午去蹭网易面试(网易通知2点40,不过上午也有面试，蘑菇街是一点半)。面试前一晚到了杭州，在阿里转了一圈回到酒店，晚上步行15分钟到网易探了路。第二天十点左右到网易和现场工作人员说明了情况，说尽量给我安排在上午不过并不能保证。上午来面试的人很多，那天就只面Android的。里边好多面试官，一个大房间里边一对一的面。十一点多的时候前台通知说上午的场排不进去了，只能是下午来，给我推迟到三点半。与此同时我联系了蘑菇街的HR,看能不能给我安排次日的现场面，但是一直没有给答复。只好先做好视频面的准备，跑到阿里找P学长吃了个饭，带到大厅找张桌子测试了下网络(阿里的公共Wifi速度很赞)，一切正常就等待着蘑菇街的视频面。和之前一样，到了面试时间面试官却迟迟没有联系我(因为网易还有面试所以略急)，期间打了两个电话给HR,最后是两点二十左右开始面的。面我的面试官是做后端的(开始居然没看出来,只是面试过程中我提示几次Android的一些点他没有问有点郁闷)，他问了我JVM的垃圾回收机制，我就连带把Java内存区域、对象死亡判定算法、垃圾回收算法　等,另外追问的一个问题也答上了。下面就是项目有什么难点、印象深刻的地方等问题。一共面了四十分钟左右，其中有一个后端的问题没有答上:朋友圈怎么设计的　[猜想是要答权限控制之类的，但是我这方面没有知识储备]，好在面试官说这是后端问题没答上没事。这次面试我一开始就主动要求自我介绍，其实就是想给面试官说下自己的学习经历&amp;学习方法＆学习热情＆个人规划。<br>　　在阿里面完蘑菇街后赶紧跑到隔壁网易，在前台问了下时间刚刚好，我前边还有一个人。找个地方坐着，心里还是很平静的，刚面蘑菇街状态都很好。等了半个小时左右接到网易HR电话问我在不在现场…　好的吧，我居然没注意已经到我了。赶紧进去找面试官，一看我面试的那桌没人，正准备坐下就来了以为三四十岁左右的面试官问我怎么来这么晚–尴尬ing… 递上一份简历就准备自我介绍一直谈到项目，面试官要求直接把App给他看。开始他关注的是我App兼容的版本，还问我MIUI有没有刷过之类的。这次应用问的比较多，后来问我有没有看过一些开源库，我只说了了EventBus&amp;了解Binder机制和Activity启动过程。(其实我还看过Fresco，Picasso,Volley,Okhttp等开源库,不过里边有个别点还没完全搞明白暂时就没说，准备追问的时候抖出来).我问要不要讲下EventBus,直接被否，估计没面试官觉得太简单。然后问我Binder,我说主要是看Framework层的，JNI的还没深入分析，面试官直接说JNI没看就不用说了，上面就是对下面的封装…<br> 接下来就是谈Activity的启动过程，我大致说了下。其他的问题就较为琐碎:JVM、多线程、锁、动画、View事件分发、View树的绘制、数据库(网络问了安全证书表示没用过就没有追问)等，这一轮下来好多点都被问了遍，看起来这位面试官是”老司机”[~_~]。其中关于锁，我谈到了volatile。这个关键字可以在某些场景下当锁用，这点我之前向蘑菇街二面面试官确认过，然后在三面的时候也和面试官谈到这个问题。不过三面面试官问我为什么，我说这也是我困惑的点，不过我猜想是内存屏障或是禁止指令重排序，但是我无法验证，面试官跟我说是指令重排。然后这次网易一面我又说了这个，把场景原因都说了。这次面试，面试官评价不错。最后是要求手写个单例，我大概示意了下，用到的方法我是了解的”最优写法”(不用加锁可以保证多线程安全&amp;使用时才创建)。就这样网易一轮完了，刚出门到大厅就被通知二面，遂折返找二面面试官。(二面面试官就在一面后两桌,我都怀疑我一面的时候他有没有在边上看)　二面面试官较一面面试官年轻，看到我就笑，莫名喜感好像我之前见过的一位演员。坐定后就和自我介绍，问的问题有一些是和一面差不多的。不过这次二面面试官给我机会让我谈了对Binder的理解，这个是我之前有整理过思路的，采用类比的方法来说明。就像一面面试官问我数据库视图，我类比到了Android的Content<br> Provider，秒懂，效果好。后面还简介问我时间拦截，一起探讨夜间模式的几种解决方案，问网易是怎么做的(这个我早就想问了，这次真的是面对面问开发)。总体来说，这次面试轻松愉快，就是做一起聊技术，全程一直笑lol。最后面试官的评价是:”你是我今天见过最活跃的一个”&amp;”说话很快”(这个主要是因为这次面试思路清晰…)，对此我的解释是”不能让面试官来推着我走，面试者应该主动展现自己”，这点他表示赞同。问完技术，面试官表示很不错没有问题，这是第一次得到面试官这么肯定的评价，心里就有底了。出来后到前台确认进入了HR三面,等了半个多小时开始HR面。HR面和之前想的不大一样，开始自我介绍的时候我说之前都是从技术角度的，这次HR面换个角度，HR表示都一样没有问题。HR面了半个小时:他也是根据自己简历上写的一些东西来问，关注点的主要是处理/看待事情的方法　我每答一个问题HR就记一点，有点专业的样子=-=.<br>　　从网易面试回来第二天就接到蘑菇街HR的电话说三面通过并预约今天的HR面(本来是视频面,不过我是Linux不方便就改成电话)。蘑菇街HR之前给我的印象最深的是很有礼貌，问的问题和网易HR有相似点，同时也宣传了一波公司的价值观。相比之前的技术面，HR面就显得轻松多了。不过蘑菇街HR面之后还有一轮面，需要到杭州终面，不得不说蘑菇街面试真是多…<br>上面写的更多的是面试的一个过程，很细的面试的点并没有写，这个可以到牛客这样的地方翻翻面经，基本差不多。不过不管怎样，首先简历上写的东西一定要熟悉。<br>　－－－－－－－<br>｜　　　　　　　｜<br>｜　预留　　　　｜　　感触经验什么的等秋招完了再说吧，现在才面几场谈不上。<br>｜　　　　　　　｜　　1.自身能力强的同时还要善于表达自己<br>　－－－－－－－　　　2.面试失败也许是还不够牛逼，但是并不影响你能力不错</p>
<p>GitHub:<a href="https://github.com/MummyDing/" target="_blank" rel="external">https://github.com/MummyDing/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ColorPickerDialog 自定义颜色选择器的实现]]></title>
      <url>https://mummyding.github.io/2016/02/10/%E3%80%90Android%E3%80%91ColorPickerDialog%20%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A2%9C%E8%89%B2%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>最近在写的项目<a href="https://github.com/MummyDing/Awesome-Campus" target="_blank" rel="external">Awosome-Campus</a> 中需要用到颜色选择器，用于更改主题，自己写了个。另外我想将它用于之前的项目<a href="https://github.com/MummyDing/Leisure" target="_blank" rel="external">闲暇(Leisure)</a>中，干脆就将它单独分离出来了。代码规范，添加了详细注释。后来又想想为什么不尝试将它打包发布，说干就干。过程曲折，除夕前夜搞到三点多都没有弄好，第二天（过年）下午四五点才算发布成功。不过这篇博文不是讲怎样打包发布，而是主要介绍它的实现。<a id="more"></a><br>   我是照着酷安的颜色选择器做的，使用了下，感觉用Dialog比较方便，只要实现中间的View，其他的逻辑就不用管了。这个自定义View支持自由添加颜色，自由选择颜色以及排版。最终做出的效果:<br><img src="http://img.blog.csdn.net/20160210003213988?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>实现思路</p>
<ol>
<li>将它进行分解，首先实现单个的圆点:<br>1) 继承View，绘制圆形，同时根据当前原点是否被选中决定是否绘制”对勾”<br>2) 圆形绘制有现成的方法，对勾根据圆形半径计算，固定三个点连线即可。这里需要注意的是”对勾”的颜色，默认为       白色，如果原点本身颜色偏白(rgb值接近0) 就绘制黑色的”勾”。<br>3) 然后是布局，根布局是垂直方向的线性布局，然后以行为单位一行一行地添加到根布局中。这里的”行”是一个水平<br> 方向的线性布局，每一行再添加规定数量的”圆点”，圆点之间加margin【这里实现有点技巧】</li>
</ol>
<p>4) 添加一个接口，用于对点击进行响应，这里需要获取选中的颜色值。实现就是经常用的listener了(观察者模式? ),<br>     View本身有个onClickListener，实现它，在onClick中调用我这个接口即可。同时在选中新的颜色的时候也要将之<br>    前“被选中的圆点”置为非选中状态。<br>5）最后封装成一个View add 到 AlterDialog中就可以了，AlterDialog的宽高也需要根据圆点数量什么的计算一下。</p>
<p>放下圆点(ColorButton)的代码，其他代码见文末GitHub:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/***</span></div><div class="line"> * Created by MummyDing on 16-2-4.</div><div class="line"> * GitHub: https://github.com/MummyDing</div><div class="line"> * Blog: http://blog.csdn.net/mummyding</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColorButton</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Context mContext;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * color of the ColorButton,default RED.</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mColor = Color.RED;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * radius of the ColorButton</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mRadius;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isChecked = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">private</span> Paint mPaint;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * paddingHorizontal is relative to the "circle" inside ColorButton (Horizontal)</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> paddingHorizontal;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     *  paddingVertical is relative to the "circle" inside ColorButton (Vertical)</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> paddingVertical;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * real width of ColorButton (including paddingHorizontal)</div><div class="line">     * width = 2*(mRadius + paddingHorizontal)</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> width;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * real height of ColorButton (including paddingVertical)</div><div class="line">     * height = 2*(mRadius + paddingVertical)</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * set size to defaultWidth if user has not specified</div><div class="line">     * unit: dip</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> defaultWidth = <span class="number">30</span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ColorButton</span><span class="params">(Context context, <span class="keyword">int</span> color)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">        mContext = context;</div><div class="line">        mColor = color;</div><div class="line">        mPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</div><div class="line">        mPaint.setStrokeWidth(<span class="number">5</span>);</div><div class="line">        defaultWidth = DisplayUtil.dip2px(mContext,defaultWidth);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ColorButton</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context,Color.RED);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ColorButton</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">        mContext = context;</div><div class="line">        mPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</div><div class="line">        mPaint.setStrokeWidth(<span class="number">5</span>);</div><div class="line">        defaultWidth = DisplayUtil.dip2px(mContext,defaultWidth);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ColorButton</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</div><div class="line">        mContext = context;</div><div class="line">        mPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</div><div class="line">        mPaint.setStrokeWidth(<span class="number">5</span>);</div><div class="line">        defaultWidth = DisplayUtil.dip2px(mContext,defaultWidth);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * ColorButton is not support self-define padding</div><div class="line">     * <span class="doctag">@param</span> widthMeasureSpec</div><div class="line">     * <span class="doctag">@param</span> heightMeasureSpec</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line">        <span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);</div><div class="line">        <span class="keyword">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec);</div><div class="line">        <span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);</div><div class="line">        <span class="keyword">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec);</div><div class="line">        <span class="keyword">if</span>(widthMode == MeasureSpec.AT_MOST &amp;&amp; heightMode == MeasureSpec.AT_MOST)&#123;</div><div class="line">            setMeasuredDimension(defaultWidth,defaultWidth);</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(widthMode == MeasureSpec.AT_MOST)&#123;</div><div class="line">            setMeasuredDimension(defaultWidth,heightSize);</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(heightMode == MeasureSpec.AT_MOST)&#123;</div><div class="line">            setMeasuredDimension(widthSize,defaultWidth);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onLayout(changed, left, top, right, bottom);</div><div class="line">        width = getWidth();</div><div class="line">        height = getHeight();</div><div class="line">        mRadius = Math.min(width,height)/<span class="number">2</span>;</div><div class="line">        paddingHorizontal = (width - mRadius*<span class="number">2</span>)/<span class="number">2</span>;</div><div class="line">        paddingVertical = (height - mRadius*<span class="number">2</span>)/<span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">        drawCircle(canvas);</div><div class="line">        <span class="keyword">if</span>(isChecked())&#123;</div><div class="line">            drawCheck(canvas);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawCircle</span><span class="params">(Canvas canvas)</span></span>&#123;</div><div class="line">        mPaint.setColor(mColor);</div><div class="line">        canvas.drawCircle(paddingHorizontal + width/<span class="number">2</span>,paddingVertical + height/<span class="number">2</span>,mRadius,mPaint);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawCheck</span><span class="params">(Canvas canvas)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(-<span class="number">40</span> &lt;mColor &amp;&amp; mColor&lt; <span class="number">40</span>)&#123;</div><div class="line">            mPaint.setColor(Color.BLACK);</div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">            mPaint.setColor(Color.WHITE);</div><div class="line">        &#125;</div><div class="line">        Point p1 = <span class="keyword">new</span> Point(paddingHorizontal + (<span class="keyword">int</span>)(<span class="number">0.3</span> * (<span class="keyword">double</span>) mRadius),paddingVertical + mRadius);</div><div class="line">        Point p2 = <span class="keyword">new</span> Point(paddingHorizontal + (<span class="keyword">int</span>)(<span class="number">0.8</span> * (<span class="keyword">double</span>) mRadius),paddingVertical + (<span class="keyword">int</span>)(<span class="number">1.4</span> * (<span class="keyword">double</span>) mRadius));</div><div class="line">        Point p3 = <span class="keyword">new</span> Point(paddingHorizontal + (<span class="keyword">int</span>)(<span class="number">1.4</span> * (<span class="keyword">double</span>)mRadius),paddingVertical +(<span class="keyword">int</span>)(<span class="number">0.4</span> * (<span class="keyword">double</span>) mRadius));</div><div class="line"></div><div class="line">        canvas.drawLine(p1.x,p1.y,p2.x,p2.y,mPaint);</div><div class="line">        canvas.drawLine(p2.x,p2.y,p3.x,p3.y,mPaint);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isChecked</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> isChecked;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setChecked</span><span class="params">(<span class="keyword">boolean</span> checked)</span> </span>&#123;</div><div class="line">        isChecked = checked;</div><div class="line">        invalidate();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getmColor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mColor;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>GitHub项目地址:<a href="https://github.com/MummyDing/ColorPickerDialog" target="_blank" rel="external">https://github.com/MummyDing/ColorPickerDialog </a><br>其他完整开源项目: <a href="https://github.com/MummyDing/Leisure" target="_blank" rel="external">https://github.com/MummyDing/Leisure</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[迟到的2015年终总结--初入工程开发]]></title>
      <url>https://mummyding.github.io/2016/01/05/%20%5B%E7%88%B1%E7%BC%96%E7%A8%8B%5D%E8%BF%9F%E5%88%B0%E7%9A%842015%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93--%E5%88%9D%E5%85%A5%E5%B7%A5%E7%A8%8B%E5%BC%80%E5%8F%91/</url>
      <content type="html"><![CDATA[<p>本没打算写这个总结,只因前几天看到秋百万在Github发起的<a href="https://github.com/winter-fall/Bye2015Hi2016/issues" target="_blank" rel="external">Bye2015Hi2016</a> 这个项目,看了好多,其中也有位与我情况相仿的学生<a href="https://github.com/LangleyChang" target="_blank" rel="external">@LangleyChang</a> 写的总结,因此有了写总结的想法,稍微梳理下这一年.昨天完成App的版本更新,今天将工作室的东西全都带回了寝室(因为不知道下个学期还会不会去),准备期末复习.现在正好,手头上没什么要紧的事,也有了闲情回顾这一年. <a id="more"></a><br>流水账<br>   2013年入学,现在大三也快过了一半,2015于我是意义重大的一年.正如标题所说的,我正式转向了工程开发.14年,我还有读研的想法,也尝试着往”研究生”这块靠.但是经过一番接触,发现那并不是我想要的生活,15年初,我便放弃了这个想法.我没做了竞赛,准备选一个应用方向学下去. C#,C++,Web,U3D,游戏… 一一尝试,一一否决,直到5月份,我开始尝试Android.<br>5月这个月,全身心投入,我翘了不少课,但却学到了好多.原来Android开发也挺好玩的嘛~_~      6月份,将自己电脑整个固态格了上Ubuntu.之前大一的时候就试过win &amp; Ubuntu 双系统,但是开机基本不仅Ubuntu ..囧..做为开发者,不尝试下Linux,总感觉缺点什么,so这也是我windows转linux的第一年.6月份,基本在准备期末,都没什么电脑.除此之外我还做了一件事—投简历. 我本计划暑期能找个Android相关的实习,在拉勾<br> &amp; 大街 投了十来份.收到的回复不多,要么是不招实习生,要么是实习时间太短不要… 不过我还是计划暑假去广东,如果能有实习机会自然是好,没有的话就”互联网公司这么多,我想去看看”lol~<br>   一考完试,直接从学校出发,在惠州待了20来天.已经没打算有实习机会了,基本就是一天到晚学Android,做点小Demo.期间去了一天深圳,沿着地铁一路转,最后到了腾讯大厦折返,不是为了玩,我就是想去转转.8月份回家,每天也是10小时+ 泡在Android学习上,不是我好学,而是比较贪玩. 在学习Android之前,写的基本是竞赛代码.C++,C#等都没有一个比较了解的,也没有用Java写过什么东西,开发经验为0.开始意识到自己的代码不规范,慢慢地就看一些设计模式之类的书籍,学习一些开源项目好的做法.之后的学习基本如此,在工作室晚上待到10点半回寝室每天都很充实.做一些小Demo,直到12月下旬发布了第一个还能用上一用的App.</p>
<p>收获</p>
<ol>
<li>找到了自己感兴趣的方向,有了近两年的目的&amp;规划</li>
<li>14年上半年注册的GitHub账号终于开始使用了.我的分享得到了肯定,收获了star,有人fork我的项目</li>
</ol>
<p><img src="http://img.blog.csdn.net/20160105200242765?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<ol>
<li>Android这块算是入了门,敢自称”开发者”,”程序员”了</li>
<li>看了不少技术书籍 &amp; 这半年来看的英文资料也是最多的.</li>
<li>发布了第一个比较正式的App,比较完整的走了一遍开发流程.<br><img src="http://img.blog.csdn.net/20160105200352026?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>6….</li>
</ol>
<p>接下来</p>
<p>1.寒假与<a href="https://github.com/KevinWu1993" target="_blank" rel="external">@KevinWu</a> 合作学校的App</p>
<ol>
<li>复习 数据结构 计算机网络 操作系统 数据库 等基础课程 准备今年各大公司的实习生招聘,暑期开始实习.</li>
<li>阅读Framework层源码,学习一些优秀的开源库源码(比如fresco等).如果可以,尝试自己封装一些框架.</li>
<li>尝试实现Java内置的一些数据结构,刷LeetCode</li>
<li>学习JNI (还是逃不过C++的魔掌<br>6….</li>
</ol>
<p>也许一年,也许两年,但不管如何,这些都是我要做的.</p>
<p>最后</p>
<p>我真得注意自己的颈椎了…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[闲暇(Leisure) 阅读类应用的开发]]></title>
      <url>https://mummyding.github.io/2015/12/11/%E3%80%90Android%E3%80%91%E5%BC%80%E6%BA%90%E3%80%80%E9%97%B2%E6%9A%87(Leisure)%20%E9%98%85%E8%AF%BB%E7%B1%BB%E5%BA%94%E7%94%A8%E7%9A%84%E5%BC%80%E5%8F%91/</url>
      <content type="html"><![CDATA[<p>今年暑假，Android大概学了两个月左右，很想做一款”能投入使用的App”。但是一没好的点子，二技术也不咋地，后来看到一个图灵机器人的接口，于是就花了一两天的时间写了一个”聊天机器人”发市场上了。显然，算不上什么”像样”的应用。开学后，随着对Android 的了解越来越深，想做出个“像样的App”的想法就愈发强烈。<a id="more"></a><br>　９月底,小kd说想合作做我们学校的App。他负责后台，我负责客户端。一个人负责，身边没有有经验的人，心里也是没底的。后来断断续续折腾了几个礼拜，大概的框架倒也搭出来了，其中几个功能性的模块我单独拉出来开源了。在这款应用的开发中，深感Java语言底子不足 &amp; 代码不够规范 ,于是在此期间又看了 Core Java 、大话设计模式、设计模式之禅、Thinking in Java　之类的书籍，收获很大。其实类似的书籍在之前也看过，但是书上讲的东西在平时很少用到，很难理解到其中的精妙之处。(在用中学，学以致用，这是我目前比较认同的学习方法)　10月下旬的时候，小kd离开原来实习的公司到了一家创业公司。还是实习(转正压力<br> 前几天才拿到正式offer)，工作比较忙后台的开发也就一直搁置了。我这边客户端的界面已经搭好了，后台没有提供数据接口我也不能继续下去了，然后就琢磨着下一个App.<br>   这个时候基本的Android开发知识已经不是问题了，重要的是做什么。首先，我想这个App能够覆盖到常用的Android 相关知识，对综合能力要求不能太低，能够起到练手的作用。其次，做出来得有实际用途并且能够用，不能再像以前的toy program　一样了。确定这两点，我就去一些Android 群里问了，同时也咨询了一些学长，然而并没有得到比较满意的建议。(有点心塞啊)　没有好的点子做，总不能闲着。翻了下GitHub，之前fork了BlackLight(一个第三方微博客户端)，下下来跑了下，貌似还不错的样子~_~　里边的代码的层次结构也非常清晰，我尝试把整个工程的结构理了一边，受益匪浅。<br>　11月初，在一个程序员社区看到有人分享了自己开发的一款应用。里边有新闻、视频、图片之类的模块，dang~　就它了！当晚就各种查查查，初步写了App的大概结构:</p>
<ol>
<li>新闻 —- 新华网 RSS2. 阅读 —- 豆瓣开放API3. 科技 —- 果壳4. 视频 —- 土豆5. 音乐 —– 待定<br>　　定好这些就开始编码了，一步一步来。首先测试各个接口，在视频和音乐这里遇到点障碍。视频网站顶多是提供一个H5播放页面(或是swf　然而Android不支持)，广告一堆，显然用户体验很差，还不如直接去下官方的客户端。音乐这块，版权问题，貌似没有看到公开的Api,有找到别人抓包搞到的－－－这不大好吧(~_~)　这两个模块就砍掉了。剩下三个都是阅读相关，干脆就当阅读类的应用去做了。又去搜接口(个人开发者，，尴尬啊，没有后台，只能依赖开放Api了…不管,练技术是关键＝＝＝)——最后是加了一个知乎日报。接口测试完毕后，就进入正式编码过程了。之前没什么经验，代码复用这块做的不好，基本上是写几个模块就重构一次。总体上来说，这段还算顺利，接下来是做”数据持久化”(缓存哈)。这款是学习BlackLight,派上用场了，之前我用到数据库是直接使用第三方的库，SQL语句都不用写。不过这次直接操作SQlite也并没有觉得复杂，结构较为清晰得益于BlackLight。<br>　　基本数据展示完成后发现App存在内存泄露，很容易就奔溃掉，一个礼拜之后才把位置排查出来解决…　之前从没有遇到过这类问题，学习了。之后又添加了设置以及关于，给朋友测试，修bug，今天正式发布。由于我的App中包含新闻内容，一些市场不允许个人开发者发布新闻类应用，所以目前还只在豌豆荚上架。<br>应用介绍:</li>
</ol>
<p>##闲暇(Leisure)</p>
<p>　闲暇(Leisure)是一款集”知乎日报”、“果壳科学人”、“新华网新闻”以及“豆瓣图书”于一体的阅读类Android应用。 果壳、知乎和豆瓣在国内拥有大量用户，这些社区的用户每天都产生很多高质量内容。闲暇以其简介的风格将这几大社区 的优质内容整合于一体，使得用户能有效地获取这些内容，大大节省了用户的时间。<br>它主要分为以下几个模块:</p>
<ol>
<li>日报: 数据来源于知乎日报RSS，内容精选自知乎优质答案。</li>
<li>阅读:接入豆瓣图书API，将图书进行分类展现并且支持搜索功能，部分图书还提供了电子书。</li>
<li>新闻:数据来源于新华网RSS，第一时间获取最新资讯。其内容简洁真实权威，相对于国内一些娱乐化新闻平台，更加严肃务实。</li>
<li>科学:接入果壳网API，果壳网作为一个开放、多元的泛科技兴趣社区，吸引了百万名有意思、爱知识、乐于分享的年轻人聚集在这里，用知识创造价值，为生活添加智趣。</li>
<li>收藏:用户收藏内容，方便用户保存优质内容。</li>
<li>个性化设置:</li>
</ol>
<ul>
<li>夜间模式: 方便用户在光线较弱或是黑暗环境下阅读，减弱屏幕光线对眼睛的刺激</li>
<li>搜索:图书搜索功能提供关键字搜索和类别搜索模式，用户可以自行选择</li>
<li>摇晃返回:用户可以通过轻轻晃动手机触发页面返回。此功能可由用户自行设置是否开启</li>
<li>退出确认:该功能默认开启，按两次返回键退出应用，防止用户误触返回键退出应用</li>
<li>无图模式:仅在WIFI模式下加载图片，节省用户数据流量</li>
<li>自动刷新:开启该功能后，在WIFI下自动刷新，获取最新内容</li>
<li>语言:　支持繁简中文和英文，满足用户语言习惯</li>
<li>清除缓存:用户可以手动清除缓存，节约手机存储空间</li>
</ul>
<p>MainActivity: 入口界面。做一些初始化的工作，加载应用整体框架，负责基本子界面的切换。<br>BaseListFragment：列表界面基类。定制性强，可自定义是否启用头部导航布局　下拉刷新等组件<br>AsbtopNavigationFragment:　头部导航布局基类,继承它即可管理头部导航布局。<br>BaseAdapter: RecyclerView　的Adapter基类<br>– BaseCache 主模块数据缓存基类　<br>ICache—　缓存接口<br>– BaseCollectionCache　收藏模块缓存基类</p>
<p>#<a href="https://github.com/MummyDing/Leisure#版本更新" target="_blank" rel="external"></a>版本更新<br><strong>2015-12-12 初版(1.0)完成</strong><br><strong>2015-12-24 Version 1.1 版发布</strong><br>0.初版发布之后收到了很多朋友的反馈,在此表示感谢!<br>由于最近比较忙,在第一版中日报数据服务器不稳定等问题准备放在第三个版本中.<br>1.这版的更新主要是修复一个严重的bug:数据冗余,刷新后之前数据没有被清除,新老数据出现重复.下载更新版本后,手动刷新即可获取正确数据. 2.软件开发靠开发者一人之力是不够的,MummyDing希望各位也能参与进来,让”闲暇”越来越好!<br>3.Bug反馈即可在评论区留言,同时也可到项目主页发布issue:<a href="https://github.com/MummyDing/Leisure/issues" target="_blank" rel="external">https://github.com/MummyDing/Leisure/issues</a><br>本项目为开源项目,技术交流可以通过邮箱联系:<a href="mailto:MummyDing@outlook.com" target="_blank" rel="external">MummyDing@outlook.com</a><br><strong>2016-01-03 Version 2.0 版发布</strong><br>上次的更新比较失败,导致不少新bug.这次经过更严谨的测试,主要做了以下改进:</p>
<ol>
<li>日报数据更加可靠,响应速度明显提升,内容更加丰富.</li>
<li>日报页面更加美观,体验更好</li>
<li>修复列表缓存不全bug</li>
<li>修复收藏bug</li>
<li>各模块列表UI做了优化</li>
<li>优化夜间模式<br>本次更新更侧重于修复之前的bug,UI上的美化将放在之后的版本中.<br>个人开发者业余开发,更新不及时请见谅,感谢支持.<br>项目地址: <a href="https://github.com/MummyDing/Leisure" target="_blank" rel="external">https://github.com/MummyDing/Leisure</a></li>
</ol>
<p>#<a href="https://github.com/MummyDing/Leisure#源码打包下载" target="_blank" rel="external"></a>源码打包下载</p>
<ol>
<li><a href="https://github.com/MummyDing/Leisure/archive/v1.0.zip" target="_blank" rel="external">Version 1.0</a></li>
<li><a href="https://github.com/MummyDing/Leisure/archive/v1.1.zip" target="_blank" rel="external">Version 1.1</a></li>
<li><a href="https://github.com/MummyDing/Leisure/archive/v2.0.zip" target="_blank" rel="external">Version 2.0</a></li>
</ol>
<ul>
<li></li>
</ul>
<p>应用截图:<br>    <img src="http://img.blog.csdn.net/20151211190440746?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="">                <img src="http://img.blog.csdn.net/20151211190529903?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>                  <img src="http://img.blog.csdn.net/20151211190601056?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>项目中，几个重要类的简单介绍(文末附源码地址)<br>MainActivity: 入口界面。做一些初始化的工作，加载应用整体框架，负责基本子界面的切换。<br>BaseListFragment：列表界面基类。定制性强，可自定义是否启用头部导航布局　下拉刷新等组件<br>AsbtopNavigationFragment:　头部导航布局基类,继承它即可管理头部导航布局。<br>BaseAdapter: RecyclerView　的Adapter基类<br>                –BaseCache 主模块数据缓存基类<br>ICache —　缓存接口<br>                –BaseCollectionCache　收藏模块缓存基类</p>
<p>当然，这个项目毕竟我写了这么久，没法详细说，具体得自己看源码了。</p>
<p>酷安应用市场下载地址:<a href="http://coolapk.com/apk/com.mummyding.app.leisure" target="_blank" rel="external">http://coolapk.com/apk/com.mummyding.app.leisure</a><br>小米应用商店下载地址: <a href="http://app.mi.com/detail/130045" target="_blank" rel="external">http://app.mi.com/detail/130045</a><br>豌豆荚应用市场下载地址: <a href="http://www.wandoujia.com/apps/com.mummyding.app.leisure" target="_blank" rel="external">http://www.wandoujia.com/apps/com.mummyding.app.leisure</a><br>360应用市场下载地址:<a href="http://m.app.so.com/detail/index?pname=com.mummyding.app.leisure&amp;id=3167599" target="_blank" rel="external">http://m.app.so.com/detail/index?pname=com.mummyding.app.leisure&amp;id=3167599</a></p>
<p>【转载请注明出处】</p>
<p>GitHub项目地址: <a href="https://github.com/MummyDing/Leisure/" target="_blank" rel="external">https://github.com/MummyDing/Leisure/  </a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[多图选择器(支持图片预览 高效加载不怕OOM)]]></title>
      <url>https://mummyding.github.io/2015/11/05/%E3%80%90Android%E3%80%91%E5%A4%9A%E5%9B%BE%E9%80%89%E6%8B%A9%E5%99%A8(%E6%94%AF%E6%8C%81%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88%20%E9%AB%98%E6%95%88%E5%8A%A0%E8%BD%BD%E4%B8%8D%E6%80%95OOM)/</url>
      <content type="html"><![CDATA[<p>现在凡是设计到图片上传的 Android App 一般都免不了”图片选择器”的模块。偷懒的直接调用系统的图库让用户一张一张的添加(比如知乎)，但大多数还是自己造轮子实现一次添加多张图片的功能。在这块，腾讯系的一些App都做的不错，图片加载速度非常块丝毫没有卡顿之感，还支持图片预览和编辑。现在自己手头上在做的一个项目也涉及到了这个，本来是调用系统图库，但是我觉得每次都只能添加一张体验并不好，于是准备自己写一个换掉。目前实现的效果就是多图选择预览,预览支持图片手势缩放。<a id="more"></a><br>视频演示地址:<a href="http://v.youku.com/v_show/id_XMTM3ODM3MzcyMA==.html?firsttime=0&amp;from=y1.4-2" target="_blank" rel="external">http://v.youku.com/v_show/id_XMTM3ODM3MzcyMA==.html?firsttime=0&amp;from=y1.4-2</a><br>gif 图 制作出了点问题，暂时先放几张效果图<br>       <img src="http://img.blog.csdn.net/20151105172019886?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="">       <img src="http://img.blog.csdn.net/20151105171943360?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>         <img src="http://img.blog.csdn.net/20151105210747497?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>     功能貌似并不难，但是实际实现过程中还是会遇到一些问题<br>大致思路:</p>
<ol>
<li>图片是通过系统提供的Content Provider 读取的，获取到的是图片对应的Uri</li>
<li>采用GridView 用于布局图片：<br>1) 已选图片的Item 布局就是2个ImageView，一个用来防止图片，一个用作删除按钮。<br>2) 选择图片页面的Item布局是一个ImageView 和 一个CheckBox<br>3.图片的加载使用的是强大的第三方图片缓存库<a href="https://github.com/facebook/fresco/" target="_blank" rel="external">Fresco</a>,预览图片是使用第三方库<a href="https://github.com/jasonpolites/gesture-imageview" target="_blank" rel="external">Gesture-ImageView</a> 用于支持图片    的手势缩放。 开始图片的加载使用的是<a href="https://github.com/square/picasso" target="_blank" rel="external">Picasso</a> ,但滚动的时候会有卡顿，改用Fresco后近千张图 随便滑。<br>4.Activity 之间的跳转需要传递“被选图片”列表 ArrayList<imagebean>,这里的ImageBean是我自定义的， 用于存储图    片信息。这里要注意的是ImageBean 要实现Serializable 接口，同时ImageBean中所有的属性必须是基本数据类型      或者是实现了Serializable接口的对象。这样传递ArrayList<imagebean><br>再加一个Serializable强转就可以了。<br>具体代码如下:</imagebean></imagebean></li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by mummyding on 15-11-3.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ImageBean</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> String imageUri;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isChecked;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> ID;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getID</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> ID;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> ImageBean <span class="title">setID</span><span class="params">(<span class="keyword">int</span> ID)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.ID = ID;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getImageUri</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> imageUri;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> ImageBean <span class="title">setImageUri</span><span class="params">(String imageUri)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.imageUri = imageUri;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isChecked</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> isChecked;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIsChecked</span><span class="params">(<span class="keyword">boolean</span> isChecked)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.isChecked = isChecked;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>查了下，Uri是没有实现Serializable接口的，于是就存储Uri对应的字符串，这里使用实现了Serializable的String。<br>5.前面说到了，选择图片界面中的Item 我是使用ImageView + CheckBox，这里有大坑！！！ 你点击GridView的CheckBox再向下翻几页后你会发现你本没有选的CheckBox也处于选中状态，然后你再滑回去之前本被你选中的CheckBox 可能又处于非选中状态，CheckBox的状态是混乱的！！ 不仅仅是GridView，ListView也会出现这种情况，它俩继承的是同一个父类。这是由于它们的重用机制导致的。于是我这里是在getView中从ImageBean中获取状态值再手动设置CheckBox状态。</p>
<ol>
<li>选择图片界面的预览图片我是使用OnItemClick触发的，但是这里的CheckBox会”夺去”Item的焦点，导致       OnItemClick无法响应。我们可以在XML中将CheckBox的focusable属性设为false。</li>
<li>预览图片的时候需要提供图片格式，也就是说要根据Uri 找到原图。显然，直接读取原图很可能造成OOM，所以我   在读取的时候是读取它的缩略图(宽度与手机屏幕大小一直)。其中使用到的方法之前在<a href="http://blog.csdn.net/mummyding/article/details/47706397" target="_blank" rel="external">【Android】自定义圆形ImageView(圆形头像<br>可指定大小)</a> 有使用到。</li>
</ol>
<p>最后附上项目中类 截图<br><img src="http://img.blog.csdn.net/20151105205725786?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>当然，这个Demo实际上细节还不少，需要自己动手才清楚。</p>
<p>———————————–update 2015.11.08——————————–<br>更换了图片预览手势缩放控件 将<a href="https://github.com/jasonpolites/gesture-imageview" target="_blank" rel="external">Gesture-ImageView</a> 换成了更加强大的<a href="https://github.com/bm-x/PhotoView" target="_blank" rel="external">PhotoView</a>。<br>现在还要借助这些优秀的开源库，现在要逐步自己实现了～_~</p>
<p>完整代码: <a href="https://github.com/MummyDing/MultiImageChooser/" target="_blank" rel="external">https://github.com/MummyDing/MultiImageChooser/</a> </p>
<p>【转载请注明出处】</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio 使用第三方类库]]></title>
      <url>https://mummyding.github.io/2015/10/20/%E3%80%90Android%E3%80%91Android%20Studio%20%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E7%B1%BB%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>距离写第一行Android代码已五月有余，现在也才稍稍敢自称”Android开发者”。在这几个月的Android学习&amp;开发过程中，我接触了不少优秀的开源库，社区的开发者们贡献的这些功能强大的库使我的开发工作变得更加简单高效。但是对于一部分Android初学者来说，各种形式的库却让他们觉得不知所措。如何正确地使用第三方库，成为他们迫切想了解的知识。现在自己在GitHub上寻找&amp;使用第三方库也算得心应手，特总结分享。<br><a id="more"></a></p>
<p><strong>一般开源库有两种形式:</strong></p>
<ul>
<li>第一种是作者打包好的，格式有jar,so，aar 等。</li>
<li>第二种是作者直接以源码的形式给出并没有打包的。</li>
</ul>
<p>一、<strong>打包好的类库(以jar包为例)</strong><br><strong>1.远程依赖库</strong><br>Android Studio 使用 Gradle 构建 Android程序，使用Gradle 添加远程依赖库也变得极为简单。一般开源类库作者都会将自己打包好的类库以这种发布出来，这样我就可以直接在Gradle添加依赖使用了。下面以著名的图片缓存库fresco 为例<br>fresco GitHub项目地址是: <a href="https://github.com/facebook/fresco" target="_blank" rel="external">https://github.com/facebook/fresco</a><br>通过项目主页的README可以知道，你只要在build.gradle 文件中加入一条compile 命令即可</p>
<p>If you are building with Gradle, simply add the following line to the <code>dependencies</code> section of your <code>build.gradle</code> file:<br>    compile ‘com.facebook.fresco:fresco:0.8.0+’</p>
<p>在Android Studio 中的具体步骤:<br>(1). 首先将Android Studio 目录结构切换到 Android (当然这个不是必须的)<br>(2). 在Gradle Scripts 中找到 app/build.gradle 文件<br>(3). 在 dependencies 块中加入 compile 命令:</p>
<pre><code>dependencies {compile &apos;com.facebook.fresco:fresco:0.7.0&apos;
}
</code></pre><p>(4).执行 Gradle (或者直接运行下工程) 没有提升错误就说明成功了</p>
<p>但是有时候事情总不是那么一帆顺风的，一般都会给出错误提示，Google即可。<br>下面给出两种可能的原因<br>(1). 网络问题<br>     既然说它是远程依赖库，联网是必须的。你要保证它可以访问网络。 检查File -&gt;Setting-&gt;Gradle 下 Offline work<br>是否被打钩，这地方是不能勾选的。另外一个就是有可能是天朝特殊的网络环境，这个你就需要代理了。<br>(2) JDK 版本问题<br>    这个问题比较奇葩，但是还是被我遇到过。Ubuntu 下默认源给的是 OpenJDK，我之前是用了 OpenJDK 7.x ，我以执行Gradle 就提示 can not resolve ….  后来换成 Oracle JDK (OpenJDK 8.x 可以)一切正常 Google官方推荐的是 Oracle JDK ，所以还是老老实实用 Oracle吧，不然指不定还会出什么问题呢！</p>
<ol>
<li><strong>导入本地类库</strong><br>并不是所有的开源作者都提供了“远程依赖库”，因此我们还需要学会如何从本地导入。还是以fresco为例<br>(1) 首先从到<a href="https://github.com/facebook/fresco/releases/" target="_blank" rel="external">https://github.com/facebook/fresco/releases/</a>下载解压 (jar包包含在里面的libs目录下 如果自己不想找你就直接去下别人提取出来的jar包吧…)<br>(2) Android Studio 项目目录结构切换到 Project 进入 app-&gt;libs 目录，将jar包直接复制到这里。<br>(3) 右键jar包 选择 Add As Library 即可<br>(4) 执行Gradle</li>
</ol>
<p>需要注意的是，如果你已经在Gradle添加了依赖就不要再在这里添加jar包了，否则会冲突！</p>
<p><strong>二、直接导入项目源码</strong><br>有时候开源作者并没将项目打包，这个时候我们并不需要自己再将其打包使用，偷懒直接用就好。下面以网页渲染库 HtmlSpanner 为例<br>HtmlSpanner 项目地址: <a href="https://github.com/NightWhistler/HtmlSpanner" target="_blank" rel="external">https://github.com/NightWhistler/HtmlSpanner</a><br>(1) 首先将源码 拉到本地<br>(2) 将源码扔到你的项目根目录下:<br><img src="http://img.blog.csdn.net/20151020160402980?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>(3) 在settings.gradle 文件中加入 ‘:HtmlSpanner’ 我加完之后就是 这里的HtmlSpanner要和源码文件名对应</p>
<pre><code>include &apos;:app&apos;,&apos;:HtmlSpanner&apos;
</code></pre><p>同样的 在app/build dependencies块中添加 compile 命令</p>
<pre><code>compile project(&apos;:HtmlSpanner&apos;)
</code></pre><p>(4) 执行 Gradle<br>但是这个项目还并没有那么简单  我执行Gradle 之后提示 can not resolve osbcp-css-parse … 我Google 了一下，osbcp-css-parse这个是一个CSS解析库。找到这个库的项目主页后，作者说这个项目停止维护了。难道不能用了？<br>当然不是。这只能说明我们不能直接使用“远程依赖库”。于是我把osbcp-css-parse 的jar包导入到HtmlSpanner中了，<br>同时将HtmlSpanner  build.gradle 文件中的osbcp-css-parse依赖命令删除。这个问题解决<br>这还没完！ 它又提示 license 文件冲突 这是因为用到的几个库里面都有个license… 这个问题还好解决<br>在build.gradle 文件中android 块 添加</p>
<pre><code>packagingOptions {
    exclude &apos;META-INF/DEPENDENCIES.txt&apos;exclude &apos;META-INF/LICENSE.txt&apos;exclude &apos;META-INF/NOTICE.txt&apos;exclude &apos;META-INF/NOTICE&apos;exclude &apos;META-INF/LICENSE&apos;exclude &apos;META-INF/DEPENDENCIES&apos;exclude &apos;META-INF/notice.txt&apos;exclude &apos;META-INF/license.txt&apos;exclude &apos;META-INF/dependencies.txt&apos;exclude &apos;META-INF/LGPL2.1&apos;}
</code></pre><p>报错提示只提示添加      exclude ‘META-INF/NOTICE.txt’</p>
<p>不过多加点不会错→_→<br>加完后  rebuilt 就行了。</p>
<p><strong>三、End</strong><br>以上介绍的是我平时接触到的，也许还有其他点没说到，这个就要大家自己探索了。<br>文中如果如有概念等错误 烦请评论区指出。</p>
<p>【转载请注明出处】<br>Author: MummyDing<br>Github 主页: <a href="https://github.com/MummyDing" target="_blank" rel="external">https://github.com/MummyDing</a>MummyDing<br>2015年10月20日</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[课程表布局实现(支持动态添加课程)]]></title>
      <url>https://mummyding.github.io/2015/09/18/%E3%80%90Android%E3%80%91%E8%AF%BE%E7%A8%8B%E8%A1%A8%E5%B8%83%E5%B1%80%E5%AE%9E%E7%8E%B0(%E6%94%AF%E6%8C%81%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0%E8%AF%BE%E7%A8%8B)/</url>
      <content type="html"><![CDATA[<p>平时使用的”超级课程表”可以从根据学号直接从教务系统中导入对应的课程表，确实方便。作为开发人员，自然会想自己去实现。当然，抓数据这个我不在行，做Android的就实现它的布局了。<a id="more"></a><br>很明显，这课表就是原生的(不是什么hXXX5)。先上效果图<br><img src="http://img.blog.csdn.net/20150918175838867?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>##大体思路<br>分析:1.一天有12节课,对于手机屏幕不大的手机如果全部显示则显得太挤。因此下面的课程是支持滑动的，但是表头不能   让它滑动,不然就看不到是星期几，用户体验不好,不够人性化。2.课的节数是不一定的，也就是说这个布局不是死的，课程需要动态添加。</p>
<p>具体:1. 首先是一个线性布局，包含两个部分1) 表头(周一～周日)     2) 课程部分<br>2.表头直接一个水平方向的线性布局，通过权值进行均分即可。<br>3.课程主体部分细分:<br>   1)使用ScrollView实现对超出区域的部分进行滑动。<br>   2)左侧的课的节数与表头部分类似,只是将水平方向改成垂直方向。<br>   3)右边课程部分细分:</p>
<ul>
<li>一个水平方向的线性布局将七天包含进来</li>
<li>每一天再用一个相对布局包含(设置权值进行水平均分)</li>
<li>在代码中动态向相对布局中添加TextView(这也是为什么上面使用相对布局的原因)</li>
</ul>
<p>XML中的布局基本就是这样，好多细节需要处理，具体看我GitHub上的完整代码。<br>接下来就是动态添加TextView的代码:<br>生成TextView</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> TextView <span class="title">createTv</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end,String text)</span></span>&#123;</div><div class="line">        TextView tv = <span class="keyword">new</span> TextView(<span class="keyword">this</span>);</div><div class="line">        <span class="comment">/*</span></div><div class="line">         指定高度和宽度</div><div class="line">         */</div><div class="line">        LinearLayout.LayoutParams params = <span class="keyword">new</span> LinearLayout.LayoutParams(gridWidth,gridHeight*(end-start+<span class="number">1</span>));</div><div class="line">        <span class="comment">/*</span></div><div class="line">        指定位置</div><div class="line">         */</div><div class="line">        tv.setY(gridHeight*(start-<span class="number">1</span>));</div><div class="line">        tv.setLayoutParams(params);</div><div class="line">        tv.setGravity(Gravity.CENTER);</div><div class="line">        tv.setText(text);</div><div class="line">        <span class="keyword">return</span> tv;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>添加TextView:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addView</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> start,<span class="keyword">int</span> end,String text)</span></span>&#123;</div><div class="line">        TextView tv;</div><div class="line">        <span class="keyword">switch</span> (i)&#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                layout = (RelativeLayout) findViewById(R.id.Monday);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                layout = (RelativeLayout) findViewById(R.id.Tuesday);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">                layout = (RelativeLayout) findViewById(R.id.Wednesday);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">                layout = (RelativeLayout) findViewById(R.id.Thursday);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">5</span>:</div><div class="line">                layout = (RelativeLayout) findViewById(R.id.Friday);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">6</span>:</div><div class="line">                layout = (RelativeLayout) findViewById(R.id.Saturday);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">7</span>:</div><div class="line">                layout = (RelativeLayout) findViewById(R.id.Sunday);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        tv= createTv(start,end,text);</div><div class="line">        tv.setBackgroundColor(Color.argb(<span class="number">100</span>,start*<span class="number">5</span>,(start+end)*<span class="number">20</span>,<span class="number">0</span>));</div><div class="line">        layout.addView(tv);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>完整代码:<a href="https://github.com/MummyDing/SchoolTimetable" target="_blank" rel="external">https://github.com/MummyDing/SchoolTimetable</a>(不要吝啬你的Star哈)</p>
<p>【转载请注明出处】<br>Author: MummyDing<br>出处:<a href="http://blog.csdn.net/mummyding/article/details/48549573" target="_blank" rel="external">http://blog.csdn.net/mummyding/article/details/48549573</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[基于融云SDK的即时聊天工具]]></title>
      <url>https://mummyding.github.io/2015/09/10/%E3%80%90Android%E3%80%91%E5%9F%BA%E4%BA%8E%E8%9E%8D%E4%BA%91SDK%E7%9A%84%E5%8D%B3%E6%97%B6%E8%81%8A%E5%A4%A9%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<p>一直想做一个类似QQ的聊天APP，先是仿了QQ的UI(详见<a href="http://blog.csdn.net/mummyding/article/details/47708203" target="_blank" rel="external">【Android】高仿QQ<br> 5.0+ UI</a>),现在借助第三方服务实现了聊天功能。在知乎上看到有人也在问如何实现一个IM，如果完全自己做，还得去了解一些通信协议，于是偷懒使用了第三方的服务。虽说底层的通信不需要自己管，但其他的编码量也并不小，前后花了一个多礼拜。(当然也是自己学艺不精)<br>关于融云，我引用我在知乎上的一段回答:<a id="more"></a><br>偷懒使用了第三方的服务融云[当然类似的有好多,比如环信]，它提供了私聊,聊天室，群,客服等模式。有两个库可供选择imkit和imlib.imkit内置了一些做好的界面，你只需要整合到自己的APP中即可。imlib提供的是一些基本的功能类，不包括界面，对界面等定制要求高可以使用这个。界面什么的都要自己写，工作量相对大，个人建议直接使用imkit就好。融云提供了iOS和Android两个版本的库[我相信你不需要做1%]，提供的功能大同小异。不过用户信息管理，用户关系等都需要自己的服务器维护，融云的服务器消息的收发。<br>使用融云你需要自己搭建一个简单的服务器维护用户信息，将融云提供的组件整合到你的APP中。更多的细节可以去看融云的文档。<br>服务器端我是临时学了Java Web后搭的，逻辑并不复杂。、</p>
<ul>
<li>界面遵循Google的 Material Design 规范，关于Material Design的教程可以参考 www.android4devs.com(被GFW,请自备梯子)。</li>
<li>配色可以借助<a href="http://www.materialpalette.com/" target="_blank" rel="external">http://www.materialpalette.com/</a> 这样就可以专心写代码基本不为界面发愁了→_→  </li>
<li>Material Design 风格的图标可以直接到<a href="http://www.icons4android.com/" target="_blank" rel="external">http://www.icons4android.com/</a> 下载</li>
<li>其他关于融云SDK的使用直接到查阅官网文档，同时也可以向他们发”工单”寻求帮助</li>
</ul>
<p>这样基本就搞定了～_~<br>业务逻辑图:<br><img src="http://img.blog.csdn.net/20151117150127981?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p><img src="http://img.blog.csdn.net/20151117150149716?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p><img src="http://img.blog.csdn.net/20151117150208437?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p><img src="http://img.blog.csdn.net/20151117150224732?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>下面是应用效果截图:<br><img src="http://ww4.sinaimg.cn/bmiddle/df755665gw1evwjtpvm3ej20k00zk76h.jpg" alt=""><img src="http://ww4.sinaimg.cn/bmiddle/df755665gw1evwjtr9azrj20k00zk76k.jpg" alt=""><img src="http://ww3.sinaimg.cn/bmiddle/df755665gw1evwjtrxucaj20k00zkgmz.jpg" alt=""><img src="http://ww1.sinaimg.cn/bmiddle/df755665gw1evwjtt4b9rj20k00zk76v.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/bmiddle/df755665gw1evwjtumh95j20k00zktb3.jpg" alt=""><img src="http://ww3.sinaimg.cn/bmiddle/df755665gw1evwjtsg566j20k00zkdib.jpg" alt=""></p>
<p>完整代码:<a href="https://github.com/MummyDing/FunnyChat-IM" target="_blank" rel="external"> https://github.com/MummyDing/FunnyChat-IM</a></p>
<p>【转载请注明出处】<br>Author: MummyDing</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[高仿QQ 5.0+ UI]]></title>
      <url>https://mummyding.github.io/2015/08/16/%E3%80%90Android%E3%80%91%E9%AB%98%E4%BB%BFQQ%205.0+%20UI/</url>
      <content type="html"><![CDATA[<p>每天接触的QQ客户端简洁美观,特别是那个侧滑菜单更是吸引人,然后就想着自己做一个.前前后后折腾下来,总算有个样子了. <a id="more"></a></p>
<p>##效果图<br><img src="http://ww2.sinaimg.cn/bmiddle/df755665gw1ev4ttonhpag209c0hc1l9.gif" alt=""><img src="http://ww2.sinaimg.cn/bmiddle/df755665gw1ev4tu1l92gg209c0hcnpj.gif" alt=""><br><img src="http://ww3.sinaimg.cn/bmiddle/df755665gw1ev4tujnf0dg209c0hcx6y.gif" alt=""><img src="http://ww1.sinaimg.cn/bmiddle/df755665gw1ev4tuvsc3eg209c0hc4qv.gif" alt=""></p>
<p>##具体实现</p>
<ol>
<li>登陆界面 主要是那个下拉列表,我是采用  PopUpWindow +ListView 实现</li>
<li>锁屏界面<a href="http://blog.csdn.net/mummyding/article/details/46966617" target="_blank" rel="external"> <em>**</em></a><a href="【Android】九宫格手势锁简单实现">【Android】九宫格手势锁简单实现</a></li>
<li>侧滑菜单使用 HorizontalScrollView +动画(使用了<strong><a href="https://github.com/JakeWharton/NineOldAndroids" target="_blank" rel="external">NineOldAndroids</a></strong>这个开源库)</li>
<li>主界面 底部菜单栏用RadioGroup实现,上面的内容页都是Fragment.</li>
<li>圆形头像可参考我的博文  #<a href="http://blog.csdn.net/mummyding/article/details/47706397" target="_blank" rel="external">【Android】自定义圆形ImageView(圆形头像 可指定大小)</a></li>
</ol>
<p>在做这个项目的过程中,感觉侧滑菜单的那个背景实现非常巧妙! 开始我捣鼓了很很久就是达不到那个效果,偶尔的机会看到QQ的apk中有一张.9.png 的背景图,然后就搞定了~  原来它这个背景是利用一张上部透明的.9图片+一张png图片叠加而成的.我们只要把.9的作为外部布局,png图片作为内部布局的背景图就可以了.<br>侧滑菜单的菜单项貌似应该使用ListView实现,,开始没注意,我就直接  ImageView+TextView而没用ListView…</p>
<p>几个要注意的点大概如此</p>
<p>完整代码: <a href="https://github.com/MummyDing/Mobile-QQ2015_UI" target="_blank" rel="external">https://github.com/MummyDing/Mobile-QQ2015_UI</a>  </p>
<p>【转载请注明出处】<br>Author: MummyDing</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[自定义圆形ImageView(圆形头像 可指定大小)]]></title>
      <url>https://mummyding.github.io/2015/08/16/%E3%80%90Android%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9C%86%E5%BD%A2ImageView(%E5%9C%86%E5%BD%A2%E5%A4%B4%E5%83%8F%20%E5%8F%AF%E6%8C%87%E5%AE%9A%E5%A4%A7%E5%B0%8F)/</url>
      <content type="html"><![CDATA[<p> 最近在仿手Q的UI,这里面经常要用到的就是圆形头像,看到 <a href="http://blog.csdn.net/mummyding/article/details/47347331" target="_blank" rel="external">在android中画圆形图片的几种办法</a> 这篇文章,了解了制作这种头像的原理.不过里面提供的方法还有一个不足的地方就是不能根据实际需求改变图片的大小,也就是说提供的原图是大尺寸的,转换之后的图片也是大尺寸的,这显然不符合我们实际项目中的需求.于是我对里面介绍的第一种方法做了一番改进,使其能直接在XML中指定图片的大小.<a id="more"></a></p>
<p>##大体步骤</p>
<ol>
<li>将原图居中裁剪成正方形</li>
<li>根据指定的宽度对正方形进行缩放</li>
<li>裁剪成圆形</li>
</ol>
<p>##效果<br><img src="http://img.blog.csdn.net/20150816211954132?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<p>##代码实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.demos.tencent_qq_ui.CustomerView;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Context; </div><div class="line"><span class="keyword">import</span> android.graphics.Bitmap; </div><div class="line"><span class="keyword">import</span> android.graphics.Canvas;</div><div class="line"><span class="keyword">import</span> android.graphics.Matrix;</div><div class="line"><span class="keyword">import</span> android.graphics.Paint;</div><div class="line"><span class="keyword">import</span> android.graphics.PorterDuff;</div><div class="line"><span class="keyword">import</span> android.graphics.PorterDuffXfermode;</div><div class="line"><span class="keyword">import</span> android.graphics.Rect;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.BitmapDrawable;</div><div class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</div><div class="line"><span class="keyword">import</span> android.util.AttributeSet; </div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"> </div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by mummyding on 15-8-7.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AvatarImageView</span> <span class="keyword">extends</span> <span class="title">ImageView</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Paint paint = <span class="keyword">new</span> Paint();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AvatarImageView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AvatarImageView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AvatarImageView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyle)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyle);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//将头像按比例缩放</span></div><div class="line">    <span class="function"><span class="keyword">private</span> Bitmap <span class="title">scaleBitmap</span><span class="params">(Bitmap bitmap)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> width = getWidth();</div><div class="line">        <span class="comment">//一定要强转成float 不然有可能因为精度不够 出现 scale为0 的错误</span></div><div class="line">        <span class="keyword">float</span> scale = (<span class="keyword">float</span>)width/(<span class="keyword">float</span>)bitmap.getWidth();</div><div class="line">        Matrix matrix = <span class="keyword">new</span> Matrix();</div><div class="line">        matrix.postScale(scale, scale);</div><div class="line">        <span class="keyword">return</span> Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.getWidth(), bitmap.getHeight(), matrix, <span class="keyword">true</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="comment">//将原始图像裁剪成正方形</span></div><div class="line">    <span class="function"><span class="keyword">private</span> Bitmap <span class="title">dealRawBitmap</span><span class="params">(Bitmap bitmap)</span></span>&#123;</div><div class="line">        <span class="keyword">int</span> width = bitmap.getWidth();</div><div class="line">        <span class="keyword">int</span> height = bitmap.getHeight();</div><div class="line">        <span class="comment">//获取宽度</span></div><div class="line">        <span class="keyword">int</span> minWidth = width &gt; height ?  height:width ;</div><div class="line">        <span class="comment">//计算正方形的范围</span></div><div class="line">        <span class="keyword">int</span> leftTopX = (width - minWidth)/<span class="number">2</span>;</div><div class="line">        <span class="keyword">int</span> leftTopY = (height - minWidth)/<span class="number">2</span>;</div><div class="line">        <span class="comment">//裁剪成正方形</span></div><div class="line">        Bitmap newBitmap = Bitmap.createBitmap(bitmap,leftTopX,leftTopY,minWidth,minWidth,<span class="keyword">null</span>,<span class="keyword">false</span>);</div><div class="line">        <span class="keyword">return</span>  scaleBitmap(newBitmap);</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        Drawable drawable = getDrawable();</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != drawable) &#123;</div><div class="line">            Bitmap rawBitmap =((BitmapDrawable)drawable).getBitmap();</div><div class="line"></div><div class="line">            <span class="comment">//处理Bitmap 转成正方形</span></div><div class="line">            Bitmap newBitmap = dealRawBitmap(rawBitmap);</div><div class="line">            <span class="comment">//将newBitmap 转换成圆形</span></div><div class="line">            Bitmap circleBitmap = toRoundCorner(newBitmap, <span class="number">14</span>);</div><div class="line"></div><div class="line">            <span class="keyword">final</span> Rect rect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, circleBitmap.getWidth(), circleBitmap.getHeight());</div><div class="line">            paint.reset();</div><div class="line">            <span class="comment">//绘制到画布上</span></div><div class="line">            canvas.drawBitmap(circleBitmap, rect, rect, paint);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> Bitmap <span class="title">toRoundCorner</span><span class="params">(Bitmap bitmap, <span class="keyword">int</span> pixels)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">//指定为 ARGB_4444 可以减小图片大小</span></div><div class="line">        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), Bitmap.Config.ARGB_4444);</div><div class="line">        Canvas canvas = <span class="keyword">new</span> Canvas(output);</div><div class="line"></div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> color = <span class="number">0xff424242</span>;</div><div class="line">        <span class="keyword">final</span> Rect rect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>,bitmap.getWidth(), bitmap.getHeight());</div><div class="line">        paint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        canvas.drawARGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        paint.setColor(color);</div><div class="line">        <span class="keyword">int</span> x = bitmap.getWidth();</div><div class="line">        canvas.drawCircle(x / <span class="number">2</span>, x / <span class="number">2</span>, x / <span class="number">2</span>, paint);</div><div class="line">        paint.setXfermode(<span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.SRC_IN));</div><div class="line">        canvas.drawBitmap(bitmap, rect, rect, paint);</div><div class="line">        <span class="keyword">return</span> output;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后就可以直接像其他View一样直接在XML中使用了.例如<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;com.demos.tencent_qq_ui.CustomerView.AvatarImageView</div><div class="line">      android:layout_width="96dip"  &lt;!--可自行指定大小--&gt;</div><div class="line">      android:layout_height="96dip"</div><div class="line">      android:layout_centerHorizontal="true"</div><div class="line">      android:src="@drawable/avatar"  &lt;!--这里放图片--&gt;</div><div class="line">      /&gt;</div></pre></td></tr></table></figure></p>
<p>这样,在界面上显示的图像就是圆形的了.       不过我这里还有一个不足的地方是没有检查原图片的大小,如果你放一张高清的图片,那就很可能crash 掉.对于这点,我目前的解决方法就是 Google 官方教程里的 <a href="http://developer.android.com/training/displaying-bitmaps/load-bitmap.html" target="_blank" rel="external">Loading<br> Large Bitmaps Efficiently</a>   但它的原理就是先不不把图片加载进来,而是先根据原图的大小计算缩放值,然后在根据缩放值读取图片(算是在读取的时候进行压缩吧….).但是这个方法需要提供视图ID,也就是说要给AvatarImageView 指定一个ID,然后一个AvatarImageView 要对应一个视图(我是这么理解的) 这样的话AvatarImageView就无法重用了.当项目中多处要用到这个的话就会很麻烦.<br> 为此我在stackoverflow提了一个问,但是目前还没有人回答T_T  <a href="http://stackoverflow.com/questions/32023272/how-to-make-bitmapset-in-src-compress" target="_blank" rel="external">How<br> to make bitmap(set in src) compress?</a></p>
<p>【转载请注明出处】<br>Author: MummyDing</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android聊天机器人实现]]></title>
      <url>https://mummyding.github.io/2015/07/23/%E3%80%90Android%E3%80%91Android%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>昨天看到一个Android视频教程讲图灵机器人，那个API接口用起来还是挺方便的，就准备自己动手做一个了。另外自己还使用了高德地图的API接口用于定位(以前用过高德的接口，比X度方便)<br>大体流程:<br>1.构建UI<br>2.请求数据[机器人&amp;地图]<br>3.解析数据[接口返回的是JSON数据]<br>4.解析出来的数据组装成HTML代码[这样直接扔在TextView上显示图片链接什么的都很方便]<br>5.更新UI<br><a id="more"></a></p>
<p>so，用到的知识点主要有: UI操作、网络编程、多线程、数据解析</p>
<p>其中，聊天界面是用ListView实现的，根据消息发送方的不同动态加载布局。欢迎界面和聊天气泡资源图片都做成了.9.png格式，确保显示正常。</p>
<p><strong>应用效果如下:</strong><br><img src="http://ww3.sinaimg.cn/bmiddle/df755665gw1euc0c613ifj20k00zkwl6.jpg" alt=""><img src="http://ww3.sinaimg.cn/bmiddle/df755665gw1euc0c6uli3j20k00zkjvr.jpg" alt=""><img src="http://ww2.sinaimg.cn/bmiddle/df755665gw1euc0c7rb3oj20k00zkgot.jpg" alt=""> <img src="http://ww1.sinaimg.cn/bmiddle/df755665gw1euc0c8oe4nj20k00zkq9h.jpg" alt=""></p>
<p>代码较多，这里就不贴了，直接给GitHub地址。<br>觉得好的话，记得给Star呀(大神请自动忽略…轻喷)<br>厚着脸皮扔市场了，也不知道能不能审核通过，第一次~_~<br>取名 Felicity 是因为前段时间在看美剧 Felicity，同事Felicity的寓意也挺好，就用它了。</p>
<p><strong>应用市场链接</strong><br>360 应用市场 <a href="http://zhushou.360.cn/detail/index/soft_id/3046442?recrefer=SE_D_Felicity" target="_blank" rel="external">http://zhushou.360.cn/detail/index/soft_id/3046442?recrefer=SE_D_Felicity</a><br>腾讯应用宝: <a href="http://android.myapp.com/myapp/detail.htm?apkName=com.felicity.mummyding.felicitychatrobot" target="_blank" rel="external">http://android.myapp.com/myapp/detail.htm?apkName=com.felicity.mummyding.felicitychatrobot</a><br>安智市场: <a href="http://www.anzhi.com/soft_2293236.html" target="_blank" rel="external">http://www.anzhi.com/soft_2293236.html</a><br>小米应用商店: <a href="http://app.mi.com/detail/104725?ref=search" target="_blank" rel="external">http://app.mi.com/detail/104725?ref=search</a><br>豌豆荚应用商店: <a href="http://www.wandoujia.com/apps/com.felicity.mummyding.felicitychatrobot" target="_blank" rel="external">http://www.wandoujia.com/apps/com.felicity.mummyding.felicitychatrobot</a><br><strong>接口</strong><br>高德地图接口: <a href="http://lbs.amap.com/" target="_blank" rel="external">http://lbs.amap.com/</a><br>图灵机器人接口: <a href="http://www.tuling123.com/openapi/" target="_blank" rel="external">http://www.tuling123.com/openapi/</a><br><strong>代码</strong><br>GitHub: <a href="https://github.com/MummyDing/ChatWithFelicity" target="_blank" rel="external">https://github.com/MummyDing/ChatWithFelicity</a></p>
<p>【转载请注明出处】<br>Author: MummyDing</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用 SwipeRefreshLayout 实现下拉刷新]]></title>
      <url>https://mummyding.github.io/2015/07/20/%E3%80%90Android%E3%80%91%E4%BD%BF%E7%94%A8%20SwipeRefreshLayout%20%E5%AE%9E%E7%8E%B0%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0/</url>
      <content type="html"><![CDATA[<p>今天在codepath 上看到一个开源项目 <a href="http://guides.codepath.com/android/Implementing-Pull-to-Refresh-Guide#references" target="_blank" rel="external">[点击查看]</a>使用到了 SwipeRefreshLayout 实现了下拉刷新,但示例并不完整,于是自己就动手写了下.之前看到郭霖的博客上也有介绍下拉刷新,不过他是纯手动实现的,代码量大,较为繁琐.[<a href="http://blog.csdn.net/guolin_blog/article/details/9255575" target="_blank" rel="external">点击查看</a>]而使用Android<br> 提供的SwipeRefreshLayout 则大大减少了我们的工作量,当然,学会了使用SwipeRefreshLayout之后还是建议去看看怎样不借助SwipeRefreshLayout从零开始实现”下拉刷新”.<a id="more"></a></p>
<p><a href="https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html" target="_blank" rel="external">SwipeRefreshLayout</a> is a ViewGroup that can hold only one scrollable<br> view as a child. This can be either a <code>ScrollView</code> or an<code>AdapterView</code> such<br> as a <code>ListView</code>.<br>Note: This layout only exists within more recent versions of support-v4 as <a href="http://stackoverflow.com/a/23325011/313399" target="_blank" rel="external">explained in this<br> post</a>. Edit your <code>app/build.gradle</code>file to include a support library later than version 19:<br>要注意的是 SwipeRefreshLayout 在 Android 4.4.2(API 19) 的版本才得到支持,因此在建工程的时候最低版本要选 19 之后的.先看效果:<br>              <img src="http://ww4.sinaimg.cn/bmiddle/df755665gw1eu98qv9zvdg209c0fkkjn.gif" alt=""></p>
<p>接下来我就直接上代码了. [其中用到的图片可以下载源码，图片均包含在里面]<br>布局文件(XML)[activity_main.xml]:<br>里面就一个ListView,也不要有其他多余的东西</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.SwipeRefreshLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/swipeContainer"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></div><div class="line">        <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/list_view"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_alignParentLeft</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span> &gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>MainActivity 代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.demo.mummyding.learnswiperefreshlayout;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.Activity;</div><div class="line"><span class="keyword">import</span> android.os.Handler;</div><div class="line"><span class="keyword">import</span> android.support.v4.widget.SwipeRefreshLayout;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.ActionBarActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.Menu;</div><div class="line"><span class="keyword">import</span> android.view.MenuItem;</div><div class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</div><div class="line"><span class="keyword">import</span> android.widget.ListView;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.json.JSONArray;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 这里要实现 OnRefreshListener 接口</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">SwipeRefreshLayout</span>.<span class="title">OnRefreshListener</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> SwipeRefreshLayout swipeContainer;</div><div class="line">    ListView listView;</div><div class="line">    List&lt;viewItem&gt; list;</div><div class="line">    itemAdapter adapter;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        init();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 下来刷新就会触发执行此方法</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * 用Handler().postDelayed 延迟执行</div><div class="line">         * 当然,不用延迟也可以,我这里是为了看效果,因为这里刷新哗的一下就没了~</div><div class="line">         */</div><div class="line">         <span class="keyword">new</span> Handler().postDelayed(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">             <span class="meta">@Override</span></div><div class="line">             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                 list.clear();</div><div class="line">                 addItems();</div><div class="line">                 adapter.notifyDataSetChanged();</div><div class="line">                 swipeContainer.setRefreshing(<span class="keyword">false</span>);</div><div class="line">             &#125;</div><div class="line">         &#125;, <span class="number">1000</span>);</div><div class="line"></div><div class="line">        <span class="comment">/*</span></div><div class="line">        不用延迟可以直接像下面这样写</div><div class="line">         */</div><div class="line">        <span class="comment">/*</span></div><div class="line">        *  list.clear();</div><div class="line">                 addItems();</div><div class="line">                 adapter.notifyDataSetChanged();</div><div class="line">                 swipeContainer.setRefreshing(false);</div><div class="line">                 */</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化变量&amp;添加事件监听</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">        listView = (ListView) findViewById(R.id.list_view);</div><div class="line">        swipeContainer = (SwipeRefreshLayout) findViewById(R.id.swipeContainer);</div><div class="line">        swipeContainer.setOnRefreshListener(<span class="keyword">this</span>);</div><div class="line">        list = <span class="keyword">new</span> ArrayList&lt;viewItem&gt;();</div><div class="line">        adapter = <span class="keyword">new</span> itemAdapter(<span class="keyword">this</span>,R.layout.view_layout,list);</div><div class="line">        listView.setAdapter(adapter);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 向ListView添加Item  下面的Item 可以多复制几遍~_~</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addItems</span><span class="params">()</span></span>&#123;</div><div class="line">        viewItem addItem = <span class="keyword">new</span> viewItem(<span class="string">"Aaron"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Barton"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Beacher"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Colbert"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Dick"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gregary"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Francis"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Fitch"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gordon"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Eugene"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gregary"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Francis"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Fitch"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gordon"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Eugene"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gregary"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Francis"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Fitch"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gordon"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Eugene"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gregary"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Francis"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Fitch"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gordon"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Eugene"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gregary"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Francis"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Fitch"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gordon"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Eugene"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gregary"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Francis"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Fitch"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Gordon"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">        addItem = <span class="keyword">new</span> viewItem(<span class="string">"Eugene"</span>);</div><div class="line">        list.add(addItem);</div><div class="line">    </div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来是两个类 Item类 和Adapter类[这就属于ListView的的基本用法了] 里面做了优化</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.demo.mummyding.learnswiperefreshlayout;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by mummyding on 15-7-20.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">viewItem</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String itemName;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getItemName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> itemName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">viewItem</span><span class="params">(String itemName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.itemName = itemName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.demo.mummyding.learnswiperefreshlayout;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.text.Layout;</div><div class="line"><span class="keyword">import</span> android.view.LayoutInflater;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.ViewGroup;</div><div class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by mummyding on 15-7-20.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">itemAdapter</span> <span class="keyword">extends</span> <span class="title">ArrayAdapter</span>&lt;<span class="title">viewItem</span>&gt; </span>&#123;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">itemAdapter</span><span class="params">(Context context, <span class="keyword">int</span> resource, List&lt;viewItem&gt; objects)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, resource, objects);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</div><div class="line">        View view;</div><div class="line">        ViewHolder viewHolder;</div><div class="line">        viewItem item = getItem(position);</div><div class="line">        <span class="keyword">if</span>(convertView == <span class="keyword">null</span>)&#123;</div><div class="line">           view = LayoutInflater.from(getContext()).inflate(R.layout.view_layout, <span class="keyword">null</span>);</div><div class="line">            viewHolder = <span class="keyword">new</span> ViewHolder();</div><div class="line">            viewHolder.name = (TextView) view.findViewById(R.id.tv_Name);</div><div class="line">            viewHolder.name.setText(item.getItemName());</div><div class="line">            view.setTag(viewHolder);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            view = convertView;</div><div class="line">            viewHolder = (ViewHolder) convertView.getTag();</div><div class="line">            viewHolder.name.setText(item.getItemName());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> view;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 为了减少getView方法中 findViewById 调用次数 而添加的一个辅助类.</div><div class="line">     */</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span></span>&#123;</div><div class="line">        TextView name;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后还有一个Item View的局部文件[view_layout.xml]</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span> <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/iv_Uers"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"60dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></div><div class="line">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@drawable/user"</span></div><div class="line">            /&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_Name"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/iv_Uers"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">            /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>完整代码:<a href="https://github.com/MummyDing/SwipeRefreshLayout" target="_blank" rel="external">https://github.com/MummyDing/SwipeRefreshLayout</a></p>
<p>【转载请注明出处】<br>Author: MummyDing<br>出处:<a href="http://blog.csdn.net/mummyding/article/category/5651761" target="_blank" rel="external">http://blog.csdn.net/mummyding/article/category/5651761</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[九宫格手势锁简单实现]]></title>
      <url>https://mummyding.github.io/2015/07/18/%E3%80%90Android%E3%80%91%E4%B9%9D%E5%AE%AB%E6%A0%BC%E6%89%8B%E5%8A%BF%E9%94%81%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>现在好多应用都可以设置手势锁，Android本身也有提供手势图案锁屏。作为Android菜鸟的我，也忍不住想自己动手实现一下。<br>下面是应用效果图:<a id="more"></a><br><img src="http://ww4.sinaimg.cn/bmiddle/df755665gw1eu6okwiy4lg209c0eohdw.gif" alt=""></p>
<p>思路:</p>
<ul>
<li>自定义一个View，重写onDraw方法，利用canvas绘制图形。</li>
<li>实现onTouch事件<ul>
<li>Down Move Down  每次判断是否有在手指的位置相应处理。</li>
</ul>
</li>
<li>直接在布局文件里面 引用View就可以了。</li>
</ul>
<p>注意:</p>
<ul>
<li>我在实现的过程中遇到一个问题，导致应用奔溃，日志信息也看不懂。最后是在stackoverflow上找到解决方法的。自定义的View一定要实现 两个参数的构造函数(即 SudokuView(Context context, AttributeSet attrs) )</li>
<li>onTouchEvent 方法的返回值一定要是 true，不然就无法相应 Move 和Up 事件了【只会鸟Down～】</li>
</ul>
<p>下面直接上代码<br>Cell 类(存储圆点的信息)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.example.mummyding.sudokulock;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by mummyding on 15-7-17.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cell</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> x;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> y;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isSelected;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSelected</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> isSelected;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIsSelected</span><span class="params">(<span class="keyword">boolean</span> isSelected)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.isSelected = isSelected;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> x;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.x = x;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> y;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span><span class="params">(<span class="keyword">int</span> y)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.y = y;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>自定义View</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.example.mummyding.sudokulock;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.Notification;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.graphics.Canvas;</div><div class="line"><span class="keyword">import</span> android.graphics.Color;</div><div class="line"><span class="keyword">import</span> android.graphics.Paint;</div><div class="line"><span class="keyword">import</span> android.util.AttributeSet;</div><div class="line"><span class="keyword">import</span> android.util.DisplayMetrics;</div><div class="line"><span class="keyword">import</span> android.util.Log;</div><div class="line"><span class="keyword">import</span> android.view.MotionEvent;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.WindowManager;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.lang.reflect.Type;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by mummyding on 15-7-17.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SudokuView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> COUNT = <span class="number">3</span>;</div><div class="line">    Cell [] cell;</div><div class="line">    <span class="keyword">int</span> [] selectedCell;</div><div class="line">    <span class="keyword">int</span> RADIUS ,OFFSET;</div><div class="line">    <span class="keyword">int</span> ScreenWidth,ScreenHeight;</div><div class="line">    <span class="keyword">int</span> startX,startY,selectedCount,lastX,lastY;</div><div class="line">    <span class="keyword">boolean</span> drawFinish ;</div><div class="line"></div><div class="line">    Paint mPaint ;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SudokuView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs);</div><div class="line">       init(context);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initCell</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="comment">//初始化各点</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; COUNT ; i++ )</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; COUNT ; j++) &#123;</div><div class="line">                cell[i * COUNT + j].setIsSelected(<span class="keyword">false</span>);</div><div class="line">                cell[i * COUNT + j].setX(startX + OFFSET * j - RADIUS/<span class="number">2</span>);</div><div class="line">                cell[i * COUNT + j].setY(startY + OFFSET * i - RADIUS/<span class="number">2</span>);</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span></span>&#123;</div><div class="line"></div><div class="line">        cell = <span class="keyword">new</span> Cell[COUNT * COUNT];</div><div class="line">        selectedCell = <span class="keyword">new</span> <span class="keyword">int</span>[COUNT*COUNT];</div><div class="line">        mPaint = <span class="keyword">new</span> Paint();</div><div class="line">        <span class="comment">//获取屏幕的宽度和高度</span></div><div class="line">        WindowManager manager = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);</div><div class="line">        DisplayMetrics dm=<span class="keyword">new</span> DisplayMetrics();</div><div class="line">        manager.getDefaultDisplay().getMetrics(dm);</div><div class="line"></div><div class="line">        ScreenWidth = dm.widthPixels;</div><div class="line">        ScreenHeight = dm.heightPixels;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">this</span>.setMinimumWidth(ScreenWidth);</div><div class="line">        <span class="keyword">this</span>.setMinimumHeight(ScreenHeight);</div><div class="line"></div><div class="line">        drawFinish = <span class="keyword">false</span>; <span class="comment">//是否绘制完成</span></div><div class="line">        selectedCount = <span class="number">0</span>; <span class="comment">//已经选中的点个数</span></div><div class="line">        RADIUS = ScreenWidth / <span class="number">12</span>; <span class="comment">//半径</span></div><div class="line">        OFFSET = ScreenWidth / <span class="number">4</span> ; <span class="comment">//点之间的间距</span></div><div class="line">        startX = OFFSET; <span class="comment">//起始点横坐标</span></div><div class="line">        startY = (ScreenHeight - OFFSET * <span class="number">2</span>) / <span class="number">2</span>; <span class="comment">//起始点纵坐标</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; COUNT*COUNT ; i++)&#123;</div><div class="line">            cell[i] = <span class="keyword">new</span> Cell();</div><div class="line">        &#125;</div><div class="line">        initCell();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">inWhichCircle</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; COUNT*COUNT ; i++)&#123;</div><div class="line">            <span class="keyword">if</span>(cell[i].isSelected() == <span class="keyword">false</span>)&#123;</div><div class="line">                <span class="keyword">if</span>((Math.abs(x - cell[i].getX())&lt;RADIUS) &amp;&amp; Math.abs(y - cell[i].getY()) &lt; RADIUS)&#123;</div><div class="line">                    <span class="keyword">return</span> i;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawCell</span><span class="params">(Canvas canvas)</span></span>&#123;</div><div class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; COUNT*COUNT ; i++)&#123;</div><div class="line">            <span class="comment">//选择画笔&amp;&amp;画圆</span></div><div class="line">            <span class="keyword">if</span>(cell[i].isSelected())&#123;</div><div class="line">                mPaint.setColor(Color.GREEN);</div><div class="line">                mPaint.setStrokeWidth(<span class="number">10</span>);</div><div class="line">                <span class="comment">//画圆</span></div><div class="line">                canvas.drawCircle(cell[i].getX(),cell[i].getY(),RADIUS,mPaint);</div><div class="line">                mPaint.setStrokeWidth(<span class="number">20</span>);</div><div class="line">                <span class="comment">//画点</span></div><div class="line">                canvas.drawPoint(cell[i].getX(),cell[i].getY(),mPaint);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mPaint.setColor(Color.WHITE);</div><div class="line">                mPaint.setStrokeWidth(<span class="number">5</span>);</div><div class="line">                <span class="comment">//画圆</span></div><div class="line">                canvas.drawCircle(cell[i].getX(),cell[i].getY(),RADIUS,mPaint);</div><div class="line">                <span class="comment">//画点</span></div><div class="line">                canvas.drawPoint(cell[i].getX(),cell[i].getY(),mPaint);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">drawLine</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        mPaint.setColor(Color.GREEN);</div><div class="line">        mPaint.setStrokeWidth(<span class="number">5</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; selectedCount ; i++)&#123;</div><div class="line">            Cell lastCell = cell[selectedCell[i-<span class="number">1</span>]],thisCell = cell[selectedCell[i]];</div><div class="line">            canvas.drawLine(lastCell.getX(), lastCell.getY(), thisCell.getX(), thisCell.getY(), mPaint);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(selectedCount !=<span class="number">0</span> &amp;&amp;(lastX !=<span class="number">0</span> || lastY != <span class="number">0</span>))&#123;</div><div class="line">            canvas.drawLine(cell[selectedCell[selectedCount - <span class="number">1</span>]].getX(), cell[selectedCell[selectedCount - <span class="number">1</span>]].getY(), lastX, lastY, mPaint);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDraw(canvas);</div><div class="line">        mPaint = <span class="keyword">new</span> Paint();</div><div class="line">        mPaint.setStrokeWidth(<span class="number">5</span>);;</div><div class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</div><div class="line">        mPaint.setColor(Color.GRAY);</div><div class="line">        mPaint.setStyle(Paint.Style.FILL);</div><div class="line">        mPaint.setStyle(Paint.Style.STROKE);</div><div class="line">        drawCell(canvas);</div><div class="line">        drawLine(canvas);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> tmpIndex;</div><div class="line">        <span class="keyword">switch</span> (event.getAction())&#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">                drawFinish = <span class="keyword">false</span>;</div><div class="line">                <span class="keyword">if</span>((tmpIndex = inWhichCircle((<span class="keyword">int</span>)event.getX(),(<span class="keyword">int</span>)event.getY())) != -<span class="number">1</span>)&#123;</div><div class="line">                    cell[tmpIndex].setIsSelected(<span class="keyword">true</span>);</div><div class="line">                    selectedCell[selectedCount++] = tmpIndex;</div><div class="line">                    <span class="keyword">this</span>.postInvalidate();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line">                  <span class="keyword">if</span>(drawFinish == <span class="keyword">false</span>)&#123;</div><div class="line">                    <span class="keyword">if</span>((tmpIndex = inWhichCircle((<span class="keyword">int</span>)event.getX(),(<span class="keyword">int</span>)event.getY())) != -<span class="number">1</span>)&#123;</div><div class="line">                        cell[tmpIndex].setIsSelected(<span class="keyword">true</span>);</div><div class="line">                        selectedCell[selectedCount++] = tmpIndex;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                lastX = (<span class="keyword">int</span>) event.getX();</div><div class="line">                lastY = (<span class="keyword">int</span>) event.getY();</div><div class="line">                <span class="keyword">this</span>.postInvalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line"></div><div class="line">                drawFinish = <span class="keyword">true</span>;</div><div class="line">                lastX = lastY = <span class="number">0</span>;</div><div class="line">                selectedCount = <span class="number">0</span>;</div><div class="line">                initCell();</div><div class="line">                <span class="keyword">this</span>.postInvalidate();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>布局布局[XML]</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"</div><div class="line">    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"</div><div class="line">    android:background="@color/material_blue_grey_800"</div><div class="line">    android:paddingRight="@dimen/activity_horizontal_margin"</div><div class="line">    android:paddingTop="@dimen/activity_vertical_margin"</div><div class="line">    android:paddingBottom="@dimen/activity_vertical_margin" tools:context=".MainActivity"&gt;</div><div class="line"></div><div class="line">    &lt;com.example.mummyding.sudokulock.SudokuView</div><div class="line">        android:layout_width="wrap_content"</div><div class="line">        android:layout_height="wrap_content"</div><div class="line">        /&gt;</div><div class="line">&lt;/RelativeLayout&gt;</div></pre></td></tr></table></figure>
<p>完整代码 : <a href="https://github.com/MummyDing/SudokuLock" target="_blank" rel="external">https://github.com/MummyDing/SudokuLock</a></p>
<p>【转载请注明出处】<br>Author: MummyDing</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[桌面歌词悬浮效果简单实现]]></title>
      <url>https://mummyding.github.io/2015/07/16/%E3%80%90Android%E3%80%91%E6%A1%8C%E9%9D%A2%E6%AD%8C%E8%AF%8D%E6%82%AC%E6%B5%AE%E6%95%88%E6%9E%9C%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>在使用”网易云音乐”的时候，<br>发现有一个显示”桌面歌词”的功能，于是就想着自己实现下。查了下资料，是用WindowManage实现的。实现过程中也出现了些问题，看了官方文档，也算解决了。这里贴上简单代码。 <a id="more"></a><br><!-- more --><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnTouchListener</span></span>&#123;</div><div class="line">    MyView myView;</div><div class="line">    WindowManager wm;</div><div class="line">    WindowManager.LayoutParams layoutParams;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        wm = (WindowManager) getApplicationContext().getSystemService(Context.WINDOW_SERVICE);</div><div class="line">        <span class="comment">//设置TextView的属性</span></div><div class="line">        layoutParams = <span class="keyword">new</span> WindowManager.LayoutParams();</div><div class="line">        layoutParams.width = WindowManager.LayoutParams.WRAP_CONTENT;</div><div class="line">        layoutParams.height = WindowManager.LayoutParams.WRAP_CONTENT;</div><div class="line">        <span class="comment">//这里是关键，使控件始终在最上方</span></div><div class="line">        layoutParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT | WindowManager.LayoutParams.TYPE_SYSTEM_OVERLAY;</div><div class="line">        layoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;</div><div class="line">        <span class="comment">//这个Gravity也不能少，不然的话，下面"移动歌词"的时候就会出问题了～ 可以试试[官网文档有说明]</span></div><div class="line">        layoutParams.gravity = Gravity.LEFT|Gravity.TOP;</div><div class="line"></div><div class="line">        <span class="comment">//创建自定义的TextView</span></div><div class="line">        myView = <span class="keyword">new</span> MyView(<span class="keyword">this</span>);</div><div class="line">        myView.setText(<span class="string">"Test Touch"</span>);</div><div class="line">        myView.setTextColor(Color.BLACK);</div><div class="line">        myView.setBackgroundColor(Color.WHITE);</div><div class="line">        <span class="comment">//监听 OnTouch 事件 为了实现"移动歌词"功能</span></div><div class="line">        myView.setOnTouchListener(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">        wm.addView(myView, layoutParams);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</div><div class="line">         <span class="keyword">switch</span> (event.getAction())&#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">                <span class="comment">//getRawX/Y 是获取相对于Device的坐标位置 注意区别getX/Y[相对于View]</span></div><div class="line">                layoutParams.x = (<span class="keyword">int</span>) event.getRawX();</div><div class="line">                layoutParams.y = (<span class="keyword">int</span>) event.getRawY();</div><div class="line">                <span class="comment">//更新"桌面歌词"的位置</span></div><div class="line">                wm.updateViewLayout(myView,layoutParams);</div><div class="line">                <span class="comment">//下面的removeView 可以去掉"桌面歌词"</span></div><div class="line">                <span class="comment">//wm.removeView(myView);</span></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line">                layoutParams.x = (<span class="keyword">int</span>) event.getRawX();</div><div class="line">                layoutParams.y = (<span class="keyword">int</span>) event.getRawY();</div><div class="line">                wm.updateViewLayout(myView,layoutParams);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//继承 TextView  好吧，貌似有点多此一举，其实直接用TextView就好</span></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyView</span> <span class="keyword">extends</span> <span class="title">TextView</span></span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyView</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(context);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>————Update 补充  ——<br>还要添加权限</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot; /&gt;
</code></pre><p>MIUI 则还要在设置中打开允许弹出悬浮窗的权限完整代码:<a href="https://github.com/MummyDing/DisplayLyricsonDesktop" target="_blank" rel="external">https://github.com/MummyDing/DisplayLyricsonDesktop</a></p>
<p>【转载请注明出处】<br>Author: MummyDing</p>
]]></content>
    </entry>
    
  
  
</search>
